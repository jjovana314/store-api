var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Address.html",[0,0.19,1,2.04]],["body/classes/Address.html",[0,0.23,1,3.169,2,1.015,3,0.177,4,0.177,5,0.152,6,3.818,7,0.56,8,1.584,9,4.826,10,3.907,11,3.818,12,4.826,13,4.826,14,1.093,15,0.018,16,1.181,17,1.217,18,4.445,19,4.445,20,4.445,21,4.445,22,4.445,23,0.56,24,4.445,25,0.177,26,0.014,27,0.014]],["title/classes/AddressDto.html",[0,0.19,28,2.354]],["body/classes/AddressDto.html",[0,0.31,2,0.915,3,0.159,4,0.159,5,0.137,7,0.504,8,1.48,9,4.588,10,3.327,11,3.693,12,4.588,13,4.588,14,1.127,15,0.019,16,1.19,17,1.211,23,0.754,25,0.159,26,0.013,27,0.013,28,3.417,29,3.44,30,4.172,31,4.005,32,4.094,33,1.963,34,3.44,35,4.005,36,4.005,37,4.005,38,4.005,39,4.005,40,2.79,41,4.082,42,2.79,43,3.44]],["title/controllers/AppController.html",[44,1.303,45,2.558]],["body/controllers/AppController.html",[0,0.246,3,0.189,4,0.189,5,0.162,7,0.6,15,0.019,16,1,17,0.843,23,0.751,25,0.189,26,0.015,27,0.015,33,2.334,44,2.115,45,4.151,46,1.69,47,4.09,48,2.343,49,5.856,50,4.762,51,1.872,52,1.142,53,3.871,54,4.09,55,4.762,56,1.973,57,1.973,58,4.762]],["title/modules/AppModule.html",[59,1.371,60,2.558]],["body/modules/AppModule.html",[0,0.17,3,0.131,4,0.131,5,0.112,15,0.019,23,0.888,25,0.131,26,0.012,27,0.012,45,3.762,46,1.651,52,0.788,53,3.829,54,2.822,59,1.736,60,5.14,61,1.519,62,2.151,63,2.822,64,2.822,65,2.822,66,3.829,67,4.126,68,4.126,69,3.352,70,3.829,71,3.575,72,2.423,73,1.711,74,1.711,75,3.286,76,2.584,77,2.584,78,3.286,79,3.286,80,3.286,81,3.286,82,3.286,83,1.825,84,1.226,85,3.286,86,3.286,87,3.286,88,3.286,89,3.286,90,3.286,91,3.286,92,4.639,93,3.286,94,3.286]],["title/injectables/AppService.html",[53,2.185,95,1.18]],["body/injectables/AppService.html",[0,0.259,3,0.199,4,0.199,5,0.171,7,0.632,15,0.019,16,1.033,17,0.888,23,0.632,25,0.199,26,0.015,27,0.015,48,2.419,49,5.963,51,1.971,52,1.203,53,3.661,57,2.078,95,1.978,96,2.458,97,4.307,98,5.015,99,5.015,100,5.015]],["title/controllers/AuthController.html",[44,1.303,101,2.558]],["body/controllers/AuthController.html",[0,0.28,3,0.215,4,0.215,5,0.185,15,0.018,23,0.683,25,0.215,26,0.016,27,0.016,44,1.924,46,1.924,52,1.301,101,4.494,102,4.658,103,3.226,104,5.423,105,5.423]],["title/modules/AuthModule.html",[59,1.371,66,2.185]],["body/modules/AuthModule.html",[0,0.195,3,0.15,4,0.15,5,0.128,15,0.019,23,0.865,25,0.15,26,0.013,27,0.013,46,1.815,52,0.903,59,1.909,61,1.741,62,2.365,66,4.335,71,3.73,72,2.663,73,1.961,74,1.961,76,2.84,77,2.84,83,2.092,84,1.406,101,4.044,106,3.234,107,3.234,108,3.234,109,3.766,110,4.671,111,4.335,112,3.766,113,3.562,114,3.766,115,3.766,116,3.766,117,3.234,118,2.623,119,3.766]],["title/injectables/AuthService.html",[95,1.18,110,2.354]],["body/injectables/AuthService.html",[0,0.283,3,0.217,4,0.217,5,0.187,15,0.018,23,0.689,25,0.217,26,0.016,27,0.016,52,1.313,95,2.085,96,2.683,110,4.16,120,4.703]],["title/interfaces/Cart.html",[121,2.04,122,2.185]],["body/interfaces/Cart.html",[3,0.19,4,0.19,5,0.163,7,0.602,8,1.659,14,1.036,15,0.018,16,1.094,23,0.602,25,0.19,26,0.015,27,0.015,121,2.656,122,3.555,123,3.331,124,4.108,125,4.662,126,3.346,127,4.377,128,4.377,129,4.782]],["title/controllers/CartController.html",[44,1.303,130,2.558]],["body/controllers/CartController.html",[0,0.11,3,0.084,4,0.084,5,0.072,7,0.267,14,0.868,15,0.019,16,1.13,17,1.08,23,0.647,25,0.084,26,0.008,27,0.008,33,2.989,44,0.753,46,0.753,48,1.318,51,2.397,52,0.509,56,0.88,57,2.455,103,1.263,122,2.807,127,2.149,130,2.335,131,1.823,132,3.161,133,2.879,134,2.879,135,3.568,136,2.879,137,4.053,138,2.879,139,3.568,140,3.568,141,3.568,142,1.823,143,2.807,144,2.893,145,2.123,146,2.74,147,1.422,148,2.591,149,3.33,150,1.823,151,3.352,152,2.123,153,2.525,154,2.123,155,4.154,156,3.352,157,2.123,158,3.352,159,1.823,160,3.352,161,2.123,162,2.123,163,2.123,164,3.352,165,2.123,166,3.352,167,1.823,168,3.352,169,2.123,170,1.823,171,3.352,172,2.123,173,2.879,174,1.823,175,3.025,176,3.025,177,3.352,178,2.123,179,2.335,180,1.626,181,1.626,182,3.182,183,1.626,184,2.471,185,1.823,186,1.823,187,1.823,188,1.823,189,2.123,190,0.928,191,0.928,192,2.123,193,2.667,194,2.123,195,2.123,196,2.123,197,2.123,198,2.123,199,2.123,200,2.123,201,2.123,202,2.123,203,2.123,204,2.123,205,2.123,206,2.123,207,2.123,208,2.123,209,2.123,210,2.123]],["title/classes/CartDto.html",[0,0.19,143,2.185]],["body/classes/CartDto.html",[0,0.323,2,0.996,3,0.173,4,0.173,5,0.149,7,0.549,8,1.564,14,1.086,15,0.019,16,0.946,17,1.105,23,0.786,25,0.173,26,0.014,27,0.014,33,2.137,40,3.036,41,4.316,42,3.036,92,3.744,125,4.381,126,3.06,127,4.002,143,3.352,211,3.744,212,4.36,213,4.231,214,4.36,215,4.36,216,4.36,217,4.36,218,3.744,219,4.36]],["title/modules/CartModule.html",[59,1.371,67,2.354]],["body/modules/CartModule.html",[0,0.185,3,0.142,4,0.142,5,0.122,15,0.019,23,0.883,25,0.142,26,0.012,27,0.012,46,1.755,52,0.861,59,1.846,61,1.659,62,2.287,67,4.634,69,3.447,70,3.937,71,3.676,72,2.576,73,1.868,74,1.868,76,2.747,77,2.747,83,1.992,84,1.339,117,3.081,122,2.134,128,2.3,130,3.943,147,1.187,184,3.937,185,3.081,220,3.081,221,3.587,222,3.081,223,3.587,224,3.587,225,3.789,226,3.587,227,3.789,228,3.587,229,2.748,230,3.587,231,2.3,232,3.171]],["title/injectables/CartService.html",[95,1.18,184,2.185]],["body/injectables/CartService.html",[0,0.078,3,0.06,4,0.06,5,0.051,7,0.189,14,0.932,15,0.019,16,1.164,17,1.06,23,0.679,25,0.06,26,0.006,27,0.006,48,0.994,51,2.251,52,0.361,56,1.591,57,2.146,84,0.561,95,0.813,96,0.737,122,3.314,125,3.164,127,2.099,132,3.033,133,2.173,134,2.173,135,2.812,136,2.173,137,3.298,138,2.173,139,2.173,140,2.173,141,2.812,142,2.173,143,2.548,146,2.648,147,1.374,148,2.504,149,2.933,150,2.173,153,2.493,159,2.173,167,1.291,170,2.173,173,3.679,174,1.291,175,2.462,176,2.462,184,1.505,186,1.291,187,1.291,188,1.291,190,1.106,191,1.679,193,2.84,233,1.291,234,2.53,235,2.53,236,1.762,237,3.274,238,1.152,239,2.274,240,2.741,241,2.57,242,3.274,243,2.284,244,1.504,245,1.504,246,1.504,247,2.53,248,1.504,249,1.504,250,3.84,251,1.504,252,3.274,253,1.504,254,1.504,255,2.53,256,1.504,257,1.504,258,0.964,259,1.504,260,1.504,261,1.504,262,2.53,263,1.504,264,1.152,265,1.504,266,1.504,267,1.938,268,1.152,269,1.938,270,0.895,271,0.835,272,1.152,273,1.504,274,1.291,275,1.504,276,1.504,277,1.504,278,1.047,279,1.291,280,1.291,281,1.504,282,1.504,283,1.504,284,1.504,285,1.504,286,1.504,287,1.504,288,1.504,289,1.504,290,2.379,291,2.417,292,1.504,293,1.504,294,1.504,295,1.152,296,1.504,297,1.504,298,1.938,299,1.504,300,1.938,301,1.291,302,1.152,303,4.283,304,3.274,305,1.504,306,1.504,307,1.504,308,2.53,309,1.504,310,1.504,311,1.504,312,1.504,313,1.504,314,2.508,315,1.938,316,1.762,317,2.508,318,1.152,319,1.504,320,2.941,321,1.938,322,1.504,323,1.504,324,1.504,325,1.504,326,1.504,327,1.504,328,1.152,329,1.504,330,1.938,331,1.504,332,1.504,333,1.504]],["title/classes/Geolocation.html",[0,0.19,10,2.04]],["body/classes/Geolocation.html",[0,0.258,2,1.14,3,0.198,4,0.198,5,0.17,7,0.629,8,1.704,10,3.409,14,0.976,15,0.018,16,1.164,17,1.087,25,0.198,26,0.015,27,0.015,148,3.032,334,4.288,335,5.09,336,5.09,337,4.993,338,4.993]],["title/classes/GeolocationDto.html",[0,0.19,32,2.354]],["body/classes/GeolocationDto.html",[0,0.263,2,1.161,3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,14,0.986,15,0.018,16,1.171,17,1.099,25,0.202,26,0.015,27,0.015,32,3.978,335,5.13,336,5.13,339,4.365,340,5.083,341,5.083]],["title/injectables/LocalStrategy.html",[95,1.18,111,2.185]],["body/injectables/LocalStrategy.html",[0,0.159,3,0.122,4,0.122,5,0.105,7,0.388,8,1.233,14,0.706,15,0.019,16,1.057,17,0.923,23,0.818,25,0.122,26,0.011,27,0.011,48,1.746,51,1.211,52,0.739,56,2.363,84,1.15,95,1.427,96,1.51,111,2.643,132,2.279,146,2.054,147,1.066,148,1.943,149,2.177,190,1.943,191,2.494,193,1.943,241,3.281,243,1.833,270,1.833,271,1.711,274,2.646,290,2.894,291,2.97,316,3.094,342,2.359,343,5.703,344,5.21,345,5.21,346,3.08,347,4.442,348,3.08,349,2.963,350,3.08,351,3.499,352,2.646,353,2.646,354,4.442,355,5.21,356,3.08,357,2.646,358,2.646,359,2.359,360,3.08,361,2.646,362,2.359,363,1.833,364,2.146,365,2.359,366,2.146,367,1.604,368,3.08,369,3.08,370,3.991,371,3.08,372,2.359,373,4.442,374,3.08,375,2.646,376,2.359]],["title/classes/Login.html",[0,0.19,377,2.185]],["body/classes/Login.html",[0,0.252,2,1.116,3,0.194,4,0.194,5,0.167,7,0.615,8,1.681,14,1.046,15,0.018,16,1.21,17,1.165,25,0.194,26,0.015,27,0.015,349,3.225,351,3.655,377,3.603,378,4.196,379,5.041,380,4.885,381,4.885,382,4.885]],["title/controllers/LoginController.html",[44,1.303,383,2.558]],["body/controllers/LoginController.html",[0,0.206,3,0.159,4,0.159,5,0.136,7,0.503,14,0.634,15,0.019,17,0.707,23,0.836,25,0.159,26,0.013,27,0.013,33,1.956,44,1.416,46,1.416,48,2.09,51,1.569,52,0.957,56,2.203,57,1.653,103,2.374,111,3.163,132,2.615,144,4.165,146,1.846,147,0.957,148,1.745,149,2.606,179,2.78,190,1.745,191,2.325,193,2.325,377,3.794,383,3.704,384,3.428,385,3.428,386,4.088,387,3.991,388,4.567,389,3.991,390,3.558,391,3.428,392,3.428,393,3.428,394,3.991,395,3.991,396,3.991,397,3.991,398,3.991,399,3.428,400,3.991]],["title/classes/LoginDto.html",[0,0.19,386,2.354]],["body/classes/LoginDto.html",[0,0.263,2,1.161,3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,14,0.986,15,0.018,16,1.171,17,1.099,25,0.202,26,0.015,27,0.015,349,3.283,351,3.72,386,3.978,401,4.365,402,5.083,403,5.083]],["title/modules/LoginModule.html",[59,1.371,68,2.354]],["body/modules/LoginModule.html",[0,0.198,3,0.152,4,0.152,5,0.131,15,0.019,23,0.869,25,0.152,26,0.013,27,0.013,46,1.835,52,0.919,59,1.931,61,1.771,62,2.392,66,4.015,68,4.498,72,2.694,73,1.994,74,1.994,76,2.872,77,2.872,83,2.127,84,1.429,147,0.919,231,2.455,232,2.455,377,2.278,383,4.079,390,4.015,391,3.289,404,3.289,405,3.289,406,3.829,407,3.829,408,3.829,409,3.829,410,3.829,411,2.933,412,3.961,413,3.829,414,3.829,415,5.172,416,3.829,417,3.829,418,3.829,419,3.829,420,3.829,421,3.829]],["title/injectables/LoginService.html",[95,1.18,390,2.185]],["body/injectables/LoginService.html",[0,0.174,3,0.134,4,0.134,5,0.115,7,0.424,14,0.752,15,0.019,17,0.837,23,0.817,25,0.134,26,0.012,27,0.012,48,1.859,51,1.322,52,0.807,56,1.959,57,1.394,84,1.256,95,1.52,96,1.649,132,2.392,146,2.187,147,1.135,148,2.068,149,2.318,190,2.068,191,2.068,193,2.392,243,3.531,270,2.001,271,1.868,290,3.038,291,1.752,295,2.576,349,1.649,363,2.001,364,2.343,366,2.343,370,2.576,377,3.531,379,3.623,385,4.062,386,3.805,388,5.097,390,2.814,392,2.889,393,2.889,399,2.889,411,2.576,422,2.576,423,3.364,424,6.486,425,5.47,426,3.364,427,3.364,428,3.294,429,3.364,430,4.73,431,2.889,432,3.364,433,3.364,434,2.889,435,1.868,436,3.364,437,3.364,438,3.364,439,3.364]],["title/interfaces/Logs.html",[121,2.04,440,2.185]],["body/interfaces/Logs.html",[3,0.183,4,0.183,5,0.157,7,0.58,8,1.621,14,1.105,15,0.018,16,1.275,25,0.183,26,0.014,27,0.014,121,2.559,123,3.209,147,1.616,153,3.115,440,3.473,441,3.957,442,5.786,443,4.692]],["title/controllers/LogsController.html",[44,1.303,444,2.558]],["body/controllers/LogsController.html",[0,0.24,3,0.185,4,0.185,5,0.158,7,0.585,15,0.019,17,0.823,23,0.739,25,0.185,26,0.015,27,0.015,33,2.277,44,1.648,46,1.648,48,2.306,51,1.826,52,1.114,56,1.924,57,1.924,103,2.764,132,2.813,190,2.031,191,2.031,193,2.031,239,3.152,258,2.978,440,2.764,444,4.087,445,3.99,446,5.803,447,4.645,448,3.99,449,4.645,450,4.645]],["title/classes/LogsDto.html",[0,0.19,451,2.558]],["body/classes/LogsDto.html",[0,0.246,2,1.088,3,0.189,4,0.189,5,0.162,7,0.6,8,1.655,14,1.084,15,0.018,16,1.233,17,1.207,25,0.189,26,0.015,27,0.015,147,1.561,153,3.009,443,4.531,451,4.151,452,4.09,453,4.762,454,4.762,455,4.762,456,4.762]],["title/modules/LogsModule.html",[59,1.371,69,1.913]],["body/modules/LogsModule.html",[0,0.213,3,0.164,4,0.164,5,0.14,15,0.019,23,0.845,25,0.164,26,0.013,27,0.013,46,1.928,52,0.989,59,2.028,61,1.906,62,2.512,69,3.66,72,2.829,73,2.147,74,2.147,76,3.017,77,2.289,83,2.289,84,1.539,113,3.784,147,0.989,231,2.642,232,2.642,239,3.622,440,2.452,444,4.232,448,3.54,457,3.54,458,3.54,459,3.54,460,4.122,461,4.122,462,4.161,463,4.122]],["title/injectables/LogsService.html",[95,1.18,239,1.8]],["body/injectables/LogsService.html",[0,0.164,3,0.126,4,0.126,5,0.108,7,0.4,14,0.722,15,0.019,16,1.176,17,1.083,23,0.77,25,0.126,26,0.011,27,0.011,48,1.784,51,2.083,52,0.762,56,1.315,57,2.196,84,1.185,95,1.459,96,1.556,132,2.783,146,2.1,147,1.468,148,1.986,153,2.829,190,1.986,191,1.389,193,1.986,236,3.162,239,2.225,243,3.441,258,2.036,270,1.889,271,1.764,290,2.522,291,2.365,440,1.889,443,4.262,446,4.967,451,3.162,464,2.727,465,4.54,466,4.967,467,5.3,468,3.175,469,3.175,470,4.54,471,4.54,472,3.175,473,3.175,474,3.175,475,3.175,476,3.175,477,3.175,478,3.175,479,3.175,480,3.175,481,3.175,482,3.175,483,3.175,484,3.175,485,3.175,486,3.175,487,3.9,488,2.727,489,3.175,490,3.175]],["title/classes/Name.html",[0,0.19,147,0.881]],["body/classes/Name.html",[0,0.263,2,1.161,3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,14,0.986,15,0.018,16,1.171,17,1.099,25,0.202,26,0.015,27,0.015,147,1.488,491,4.365,492,5.13,493,5.13,494,5.083,495,5.083]],["title/classes/NameDto.html",[0,0.19,496,2.354]],["body/classes/NameDto.html",[0,0.263,2,1.161,3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,14,0.986,15,0.018,16,1.171,17,1.099,25,0.202,26,0.015,27,0.015,492,5.13,493,5.13,496,3.978,497,4.365,498,5.083,499,5.083]],["title/classes/Products.html",[0,0.19,126,1.8]],["body/classes/Products.html",[0,0.226,2,0.999,3,0.174,4,0.174,5,0.149,7,0.551,8,1.568,11,3.137,14,1.114,15,0.018,16,1.235,17,1.241,25,0.174,26,0.014,27,0.014,126,2.768,500,3.759,501,4.01,502,4.356,503,4.791,504,4.791,505,4.791,506,4.356,507,4.376,508,4.376,509,4.376,510,4.376,511,4.376,512,4.376]],["title/interfaces/ProductsCart.html",[121,2.04,128,2.354]],["body/interfaces/ProductsCart.html",[3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,11,3.72,14,0.986,15,0.018,16,1.124,25,0.202,26,0.015,27,0.015,121,2.823,123,3.54,128,3.978,278,4.858,513,4.365,514,5.343]],["title/classes/ProductsCartDto.html",[0,0.19,213,2.354]],["body/classes/ProductsCartDto.html",[0,0.263,2,1.161,3,0.202,4,0.202,5,0.173,7,0.64,8,1.723,11,3.446,14,0.986,15,0.018,16,1.042,17,1.099,25,0.202,26,0.015,27,0.015,213,3.978,278,4.665,514,5.13,515,4.365,516,5.083,517,5.083]],["title/controllers/ProductsController.html",[44,1.303,518,2.558]],["body/controllers/ProductsController.html",[0,0.106,3,0.081,4,0.081,5,0.07,7,0.258,14,0.854,15,0.019,16,1.077,17,1.094,23,0.635,25,0.081,26,0.008,27,0.008,33,3.028,44,0.726,46,0.726,48,1.28,51,2.428,52,0.491,56,0.848,57,2.423,103,1.217,126,1.596,132,3.176,144,2.824,146,2.705,147,1.403,148,2.558,149,3.306,153,2.705,179,2.824,180,1.567,181,1.567,182,2.494,183,1.567,190,0.895,191,0.895,193,2.701,240,2.252,501,2.087,518,2.268,519,1.758,520,2.797,521,3.483,522,2.797,523,3.97,524,4.334,525,2.797,526,3.483,527,3.483,528,3.483,529,3.483,530,1.758,531,3.353,532,3.256,533,2.046,534,2.797,535,2.797,536,2.046,537,2.797,538,1.758,539,2.797,540,2.046,541,3.256,542,2.046,543,2.046,544,1.758,545,2.797,546,2.046,547,2.046,548,2.046,549,2.797,550,2.797,551,3.256,552,2.046,553,3.256,554,2.797,555,2.046,556,2.797,557,2.046,558,2.963,559,2.797,560,2.046,561,4.055,562,1.758,563,1.758,564,1.758,565,1.758,566,2.046,567,4.622,568,2.046,569,2.046,570,2.046,571,1.758,572,1.758,573,2.046,574,2.046,575,2.046,576,2.046,577,1.758,578,2.046,579,2.046,580,2.046]],["title/classes/ProductsDto.html",[0,0.19,531,2.185]],["body/classes/ProductsDto.html",[0,0.226,2,0.999,3,0.174,4,0.174,5,0.149,7,0.551,8,1.568,11,3.137,14,1.114,15,0.018,16,1.235,17,1.241,25,0.174,26,0.014,27,0.014,501,4.01,502,4.356,503,4.791,504,4.791,505,4.791,506,4.356,531,3.36,581,3.759,582,4.376,583,4.376,584,4.376,585,4.376,586,4.376,587,4.376]],["title/modules/ProductsModule.html",[59,1.371,70,2.185]],["body/modules/ProductsModule.html",[0,0.202,3,0.155,4,0.155,5,0.133,15,0.019,23,0.855,25,0.155,26,0.013,27,0.013,46,1.861,52,0.938,59,1.957,61,1.808,62,2.425,69,3.536,70,4.248,72,2.731,73,2.036,74,2.036,76,2.912,77,2.912,83,2.171,84,1.459,113,3.652,126,1.916,147,0.938,229,2.994,231,2.506,232,2.506,240,4.071,518,4.122,565,3.357,588,3.357,589,3.909,590,3.357,591,3.357,592,3.909,593,4.016,594,3.909,595,3.909]],["title/injectables/ProductsService.html",[95,1.18,240,2.04]],["body/injectables/ProductsService.html",[0,0.071,3,0.054,4,0.054,5,0.047,7,0.172,14,0.903,15,0.019,16,1.105,17,1.067,23,0.593,25,0.054,26,0.006,27,0.006,48,0.917,51,2.282,52,0.328,56,0.966,57,2.147,84,0.51,95,0.749,96,0.669,126,1.143,132,3.06,146,2.626,147,1.362,148,2.483,149,2.952,153,2.685,175,1.956,190,1.02,191,1.02,193,2.831,236,1.624,238,1.046,239,2.162,240,1.295,243,2.146,258,0.876,264,1.046,267,2.763,268,1.046,269,2.337,270,0.813,271,0.759,272,1.046,280,4.265,290,2.982,291,2.454,298,3.103,300,1.786,301,1.173,302,1.046,314,2.337,315,2.337,316,2.821,317,3.969,318,1.786,320,2.763,321,1.786,328,2.763,330,1.046,372,1.046,376,1.046,501,3.322,502,2.125,506,1.624,520,2.003,521,2.621,522,2.003,523,3.098,524,3.098,525,2.003,526,2.621,527,2.621,528,2.003,529,2.621,530,2.003,531,3.195,534,1.173,535,1.173,537,3.479,538,2.003,544,2.003,550,1.173,558,2.313,562,1.173,563,1.173,564,1.173,596,1.046,597,2.332,598,2.003,599,2.003,600,3.051,601,3.051,602,1.366,603,1.366,604,1.366,605,1.366,606,2.332,607,1.366,608,2.003,609,1.366,610,1.366,611,1.366,612,1.366,613,1.366,614,1.366,615,2.003,616,1.366,617,1.366,618,1.366,619,1.366,620,1.366,621,2.003,622,1.366,623,1.366,624,1.366,625,1.624,626,1.046,627,1.366,628,1.366,629,1.366,630,1.173,631,1.366,632,1.366,633,1.366,634,2.332,635,1.366,636,2.332,637,2.003,638,1.173,639,2.621,640,3.051,641,1.366,642,3.608,643,1.366,644,1.366,645,2.003,646,1.173,647,1.173,648,2.332,649,1.366,650,1.173,651,1.173,652,1.173,653,2.332,654,1.366,655,1.173,656,1.366,657,1.173,658,1.366,659,3.051,660,1.366,661,1.366,662,1.366,663,1.366,664,1.366,665,1.366,666,1.366,667,1.366,668,2.332,669,1.173,670,1.173]],["title/classes/UpdateAddressDto.html",[0,0.19,671,2.813]],["body/classes/UpdateAddressDto.html",[0,0.272,2,1.204,3,0.209,4,0.209,5,0.18,15,0.019,23,0.799,25,0.209,26,0.016,27,0.016,28,3.379,367,2.746,671,4.859,672,4.528,673,4.528,674,2.928,675,2.746,676,2.746,677,5.272]],["title/classes/UpdateCartDto.html",[0,0.19,176,2.354]],["body/classes/UpdateCartDto.html",[0,0.272,2,1.204,3,0.209,4,0.209,5,0.18,15,0.019,23,0.799,25,0.209,26,0.016,27,0.016,143,3.136,176,4.067,367,2.746,674,2.928,675,2.746,676,2.746,678,4.528,679,5.272,680,5.272]],["title/classes/UpdateGeolocationDto.html",[0,0.19,681,2.813]],["body/classes/UpdateGeolocationDto.html",[0,0.272,2,1.204,3,0.209,4,0.209,5,0.18,15,0.019,23,0.799,25,0.209,26,0.016,27,0.016,32,3.379,43,4.528,367,2.746,674,2.928,675,2.746,676,2.746,681,4.859,682,4.528,683,5.272]],["title/classes/UpdateNameDto.html",[0,0.19,684,2.813]],["body/classes/UpdateNameDto.html",[0,0.272,2,1.204,3,0.209,4,0.209,5,0.18,15,0.019,23,0.799,25,0.209,26,0.016,27,0.016,367,2.746,496,3.379,674,2.928,675,2.746,676,2.746,684,4.859,685,4.528,686,4.528,687,5.272]],["title/classes/UpdatePasswordDto.html",[0,0.19,688,2.558]],["body/classes/UpdatePasswordDto.html",[0,0.274,2,1.209,3,0.21,4,0.21,5,0.181,7,0.667,8,1.766,14,0.842,15,0.018,16,1.068,17,0.938,25,0.21,26,0.016,27,0.016,688,4.431,689,4.549,690,6.819,691,5.296]],["title/classes/UpdateProductsCartDto.html",[0,0.19,692,2.813]],["body/classes/UpdateProductsCartDto.html",[0,0.27,2,1.193,3,0.207,4,0.207,5,0.178,15,0.019,23,0.794,25,0.207,26,0.016,27,0.016,213,4.044,218,4.486,367,2.72,674,3.504,675,2.72,676,2.72,692,4.832,693,4.486]],["title/classes/UpdateProductsDto.html",[0,0.19,558,2.354]],["body/classes/UpdateProductsDto.html",[0,0.272,2,1.204,3,0.209,4,0.209,5,0.18,15,0.019,23,0.799,25,0.209,26,0.016,27,0.016,367,2.746,531,3.136,558,4.067,674,2.928,675,2.746,676,2.746,694,4.528,695,5.272,696,5.272]],["title/classes/UpdateUsersDto.html",[0,0.19,697,2.354]],["body/classes/UpdateUsersDto.html",[0,0.261,2,1.156,3,0.201,4,0.201,5,0.172,15,0.019,23,0.842,25,0.201,26,0.015,27,0.015,290,2.81,349,2.48,367,2.635,674,3.437,675,3.223,676,3.223,697,3.967,698,4.346,699,3.01,700,5.06,701,5.06,702,5.06]],["title/classes/Users.html",[0,0.19,435,2.04]],["body/classes/Users.html",[0,0.204,1,3.782,2,0.902,3,0.157,4,0.157,5,0.135,7,0.497,8,1.466,14,1.123,15,0.019,16,1.232,17,1.251,23,0.665,25,0.157,26,0.013,27,0.013,30,4.143,147,1.634,349,2.915,351,3.304,435,2.933,442,5.109,703,3.392,704,4.143,705,4.143,706,3.95,707,3.95,708,3.95,709,3.95,710,3.95,711,3.95,712,3.95,713,3.95,714,3.95,715,3.95]],["title/controllers/UsersController.html",[44,1.303,716,2.558]],["body/controllers/UsersController.html",[0,0.114,3,0.088,4,0.088,5,0.075,7,0.278,14,0.882,15,0.019,16,1.139,17,1.063,23,0.699,25,0.088,26,0.009,27,0.009,33,2.943,44,0.783,46,0.783,48,1.358,51,2.36,52,0.529,56,0.914,57,2.299,103,1.312,132,3.141,144,2.966,146,2.682,147,1.391,148,2.537,149,3.206,153,2.92,175,2.73,179,2.966,180,1.689,181,1.689,182,1.689,183,1.689,190,0.965,191,0.965,193,2.626,241,2.218,435,2.676,539,2.967,545,2.967,549,2.967,554,2.967,556,2.967,559,2.967,571,1.894,572,1.894,577,2.967,688,3.356,697,3.089,699,2.867,716,2.406,717,1.894,718,2.967,719,2.967,720,4.139,721,2.967,722,2.967,723,3.657,724,3.657,725,3.657,726,1.894,727,2.206,728,2.967,729,1.894,730,2.206,731,2.206,732,1.894,733,2.206,734,2.206,735,3.454,736,2.206,737,2.206,738,2.206,739,1.894,740,3.657,741,3.454,742,2.206,743,2.206,744,2.206,745,1.894,746,1.894,747,1.894,748,1.894,749,2.206,750,2.206,751,2.206,752,2.206,753,2.206,754,2.206,755,2.206,756,2.206,757,2.206,758,2.206,759,2.206,760,2.206,761,2.206,762,2.206,763,2.206]],["title/classes/UsersDto.html",[0,0.19,699,2.185]],["body/classes/UsersDto.html",[0,0.296,1,3.181,2,0.838,3,0.146,4,0.146,5,0.125,7,0.462,8,1.394,14,1.133,15,0.019,16,1.197,17,1.208,23,0.776,25,0.146,26,0.012,27,0.012,28,3.949,30,3.99,33,2.807,34,4.314,40,2.555,41,4.387,42,2.555,147,1.374,349,2.807,351,3.181,496,3.949,673,3.151,686,3.151,699,2.988,704,3.99,705,3.99,764,3.151,765,3.668,766,3.668,767,5.728,768,3.668,769,3.668,770,3.668,771,3.668,772,3.668]],["title/modules/UsersModule.html",[59,1.371,71,2.04]],["body/modules/UsersModule.html",[0,0.181,1,1.949,3,0.139,4,0.139,5,0.12,10,1.949,15,0.019,23,0.879,25,0.139,26,0.012,27,0.012,46,1.729,52,0.842,59,1.819,61,1.623,62,2.253,69,3.423,71,3.876,72,2.537,73,1.828,74,1.828,76,2.706,77,2.706,83,1.949,84,1.31,113,3.393,118,3.393,147,1.524,229,2.688,231,2.25,232,3.876,241,3.751,435,1.949,716,3.898,745,3.014,773,3.014,774,3.014,775,3.014,776,3.509,777,3.509,778,3.509,779,3.509,780,3.732,781,3.509,782,3.732,783,3.509,784,3.732,785,3.509]],["title/injectables/UsersService.html",[95,1.18,241,1.913]],["body/injectables/UsersService.html",[0,0.062,3,0.048,4,0.048,5,0.041,7,0.152,14,0.904,15,0.019,16,1.165,17,1.044,23,0.59,25,0.048,26,0.005,27,0.005,48,0.823,51,2.235,52,0.289,56,0.868,57,2.033,84,0.45,95,0.673,96,0.591,125,0.773,132,3.035,146,2.63,147,1.364,148,2.487,149,2.405,153,2.844,175,1.78,190,0.916,191,0.916,193,2.935,236,1.459,238,0.924,239,2.018,241,1.091,243,1.974,258,1.78,264,0.924,267,3.154,268,0.924,269,2.127,270,0.718,271,1.164,272,0.924,279,1.799,290,3.22,291,2.556,295,0.924,298,1.605,300,2.541,302,0.924,314,2.127,315,2.127,316,3.081,317,3.759,318,1.605,320,2.541,321,1.605,328,0.924,330,1.605,349,1.841,351,2.086,358,1.036,359,0.924,363,0.718,364,0.84,366,0.84,370,3.909,372,0.924,375,1.036,376,0.924,428,1.934,431,1.799,435,1.542,466,1.036,487,1.799,488,1.036,598,1.799,599,1.799,608,1.799,615,1.036,621,1.799,625,1.459,626,0.924,630,1.036,637,1.799,638,1.799,639,1.036,645,1.799,646,1.036,647,1.036,650,1.036,651,1.036,652,1.036,655,1.036,657,1.036,669,1.036,670,2.385,697,2.127,699,1.974,704,1.934,705,2.616,718,1.799,719,1.799,720,2.849,721,1.799,722,1.799,723,1.799,724,1.799,725,2.385,726,1.799,728,2.385,729,1.799,732,1.799,739,1.799,740,2.849,746,1.036,747,1.036,748,1.036,786,0.924,787,2.095,788,2.095,789,2.095,790,2.095,791,2.777,792,2.777,793,1.206,794,1.206,795,1.206,796,2.095,797,1.206,798,2.095,799,1.206,800,1.206,801,1.206,802,1.206,803,2.095,804,1.206,805,1.206,806,1.206,807,1.206,808,1.206,809,1.206,810,2.095,811,1.206,812,1.206,813,2.095,814,3.317,815,1.206,816,1.206,817,1.206,818,1.206,819,1.206,820,1.036,821,1.206,822,1.206,823,1.206,824,1.206,825,1.206,826,2.095,827,1.206,828,1.206,829,1.206,830,1.206,831,1.206,832,1.206,833,1.206,834,1.206,835,1.206,836,1.206,837,3.317,838,1.206,839,2.095,840,2.095,841,2.095,842,1.206,843,1.206,844,2.095,845,1.206,846,1.206,847,2.095,848,2.095,849,2.095,850,1.206,851,2.095,852,1.206,853,1.206,854,1.206,855,2.777,856,1.206,857,1.206,858,1.206,859,1.206,860,2.095,861,1.206]],["title/coverage.html",[862,4.318]],["body/coverage.html",[0,0.366,1,1.137,5,0.07,6,1.758,10,1.137,14,0.325,15,0.019,26,0.008,27,0.008,28,1.312,29,1.758,32,1.312,44,2,45,1.425,47,1.758,53,1.217,95,1.88,97,1.758,101,1.425,102,1.758,110,1.312,111,1.217,118,1.425,120,1.758,121,2.252,122,1.217,124,1.758,126,1.003,128,1.312,130,1.425,131,1.758,143,1.217,147,0.491,176,1.312,184,1.217,211,1.758,213,1.312,225,1.567,227,1.567,233,1.758,239,1.003,240,1.137,241,1.066,291,1.066,334,1.758,339,1.758,342,3.106,363,2.412,365,1.567,377,1.217,378,1.758,383,1.425,384,1.758,386,1.312,390,1.217,401,1.758,412,1.567,422,3.106,428,2.268,435,1.137,440,1.217,441,1.758,444,1.425,445,1.758,451,1.425,452,1.758,462,1.567,464,1.758,491,1.758,496,1.312,497,1.758,500,1.758,513,1.758,515,1.758,518,1.425,519,1.758,531,1.217,558,1.312,581,1.758,593,1.567,596,2.494,625,2.268,671,1.567,672,1.758,678,1.758,681,1.567,682,1.758,684,1.567,685,1.758,688,1.425,689,1.758,692,1.567,693,1.758,694,1.758,697,1.312,698,1.758,699,1.217,703,1.758,716,1.425,717,1.758,764,1.758,780,1.567,782,1.567,784,1.567,786,3.54,862,1.758,863,2.046,864,2.046,865,2.046,866,7.592,867,5.046,868,7.193,869,4.622,870,6.806,871,2.046,872,2.046,873,5.849,874,1.758,875,1.758,876,1.758,877,3.256,878,3.256,879,1.758,880,1.758,881,2.046,882,1.758,883,4.055,884,1.758,885,2.046,886,2.046,887,2.046,888,3.256,889,1.758,890,1.758,891,1.758,892,1.758,893,2.046,894,2.046,895,1.758]],["title/dependencies.html",[62,2.044,896,3.06]],["body/dependencies.html",[0,0.288,15,0.019,26,0.014,27,0.014,40,2.99,42,2.99,52,1.03,62,1.985,84,1.603,271,2.385,357,3.688,359,3.289,361,4.792,362,3.289,363,2.554,411,3.289,675,2.236,676,2.236,897,4.294,898,4.294,899,6.561,900,4.294,901,4.294,902,4.294,903,5.579,904,5.579,905,4.294,906,4.294,907,4.294,908,4.294,909,4.294,910,4.294,911,4.294,912,4.294,913,4.294,914,4.294,915,4.294,916,4.294,917,4.294,918,4.294,919,4.294,920,4.294,921,4.294,922,4.294,923,4.294,924,4.294,925,4.294]],["title/miscellaneous/functions.html",[926,2.131,927,3.797]],["body/miscellaneous/functions.html",[7,0.717,15,0.016,26,0.016,27,0.016,880,4.892,882,6.038,926,3.967,927,4.892,928,5.695]],["title/index.html",[7,0.385,929,2.628,930,2.628]],["body/index.html",[15,0.013,26,0.013,27,0.013,362,4.613,434,3.477,820,3.477,895,3.477,929,4.61,930,4.61,931,6.022,932,6.022,933,6.022,934,4.048,935,5.368,936,5.368,937,5.368,938,6.022,939,6.022,940,5.368,941,5.368,942,4.048,943,4.048,944,5.368,945,4.048,946,4.048,947,6.022,948,4.048,949,4.048,950,4.048,951,6.413,952,4.048,953,4.048,954,4.048,955,4.048,956,4.048,957,6.413,958,6.022,959,4.048,960,4.048,961,4.048,962,5.368,963,4.048,964,4.048,965,4.048,966,4.048,967,4.048,968,4.048,969,4.048,970,4.048,971,4.048,972,4.048,973,4.048,974,4.048,975,4.048,976,4.048,977,4.048,978,4.048,979,4.048,980,4.048,981,4.048,982,4.048]],["title/modules.html",[61,2.325]],["body/modules.html",[15,0.015,26,0.015,27,0.015,60,3.478,61,2.309,66,2.97,67,3.201,68,3.201,69,2.6,70,2.97,71,2.773,983,7.34,984,7.34,985,7.34,986,7.34]],["title/overview.html",[987,4.318]],["body/overview.html",[2,0.698,15,0.019,26,0.011,27,0.011,46,1.084,53,3.086,60,5.041,61,1.413,62,2.042,63,2.624,64,2.624,65,2.624,66,4.178,67,4.455,68,4.152,69,3.519,70,4.02,71,3.811,72,2.3,73,1.591,74,1.591,96,1.497,106,2.624,107,2.624,108,2.624,110,4.152,111,3.854,123,2.128,184,3.086,220,2.624,222,2.624,239,3.174,240,3.597,241,3.373,390,3.086,404,2.624,405,2.624,457,2.624,458,2.624,459,2.624,588,2.624,590,2.624,591,2.624,773,2.624,774,2.624,775,2.624,987,2.624,988,4.417,989,3.056,990,3.056,991,3.056]],["title/miscellaneous/variables.html",[926,2.131,992,3.797]],["body/miscellaneous/variables.html",[1,1.478,7,0.335,9,2.038,10,1.478,11,3.621,12,2.038,13,2.038,14,0.905,15,0.019,16,1.242,26,0.01,27,0.01,30,1.854,118,2.779,125,2.557,126,1.304,127,1.706,147,0.957,153,1.231,225,3.055,227,3.665,278,1.854,291,3.396,335,2.038,336,2.038,342,2.038,349,1.955,351,2.216,352,6.122,353,6.122,363,3.557,364,3.333,365,3.055,366,3.333,379,2.038,412,3.055,422,2.038,428,3.702,443,1.854,462,3.055,492,2.038,493,2.038,501,1.706,502,1.854,503,2.038,504,2.038,505,2.038,506,1.854,514,2.038,593,3.055,596,2.038,625,3.702,626,3.055,704,1.854,705,1.854,780,3.665,782,3.665,784,3.665,786,2.038,874,2.286,875,2.286,876,2.286,879,2.286,884,2.286,889,2.286,890,2.286,891,2.286,892,2.286,926,1.854,992,2.286,993,2.661,994,3.989,995,3.989,996,4.785,997,2.661,998,2.661,999,2.661,1000,2.661,1001,2.661,1002,2.661,1003,2.661,1004,2.661,1005,2.661,1006,6.52]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["0.2.37",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":321,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["1.1.15",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":366,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["23",{"_index":990,"title":{},"body":{"overview.html":{}}}],["24",{"_index":626,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":991,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":976,"title":{},"body":{"index.html":{}}}],["5.0.1",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["5.13.8",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":421,"title":{},"body":{"modules/LoginModule.html":{}}}],["7",{"_index":988,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":989,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["_cartmodel",{"_index":242,"title":{},"body":{"injectables/CartService.html":{}}}],["_id",{"_index":442,"title":{},"body":{"interfaces/Logs.html":{},"classes/Users.html":{}}}],["_logsmodel",{"_index":470,"title":{},"body":{"injectables/LogsService.html":{}}}],["_productsmodel",{"_index":601,"title":{},"body":{"injectables/ProductsService.html":{}}}],["_usersmodel",{"_index":792,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":822,"title":{},"body":{"injectables/UsersService.html":{}}}],["accessors",{"_index":236,"title":{},"body":{"injectables/CartService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["acount",{"_index":961,"title":{},"body":{"index.html":{}}}],["action",{"_index":443,"title":{},"body":{"interfaces/Logs.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":963,"title":{},"body":{"index.html":{}}}],["addlogs",{"_index":465,"title":{},"body":{"injectables/LogsService.html":{}}}],["addlogs(name",{"_index":471,"title":{},"body":{"injectables/LogsService.html":{}}}],["addnewcart",{"_index":133,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["addnewcart(@body",{"_index":192,"title":{},"body":{"controllers/CartController.html":{}}}],["addnewcart(cart",{"_index":142,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["addproductslist",{"_index":520,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproductslist(@body",{"_index":568,"title":{},"body":{"controllers/ProductsController.html":{}}}],["addproductslist(productslist",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["address",{"_index":1,"title":{"classes/Address.html":{}},"body":{"classes/Address.html":{},"classes/Users.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.dto",{"_index":673,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UsersDto.html":{}}}],["address.interface",{"_index":714,"title":{},"body":{"classes/Users.html":{}}}],["addressdto",{"_index":28,"title":{"classes/AddressDto.html":{}},"body":{"classes/AddressDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["addressschema",{"_index":780,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["advencha",{"_index":418,"title":{},"body":{"modules/LoginModule.html":{}}}],["allcarts",{"_index":324,"title":{},"body":{"injectables/CartService.html":{}}}],["allcarts.length",{"_index":326,"title":{},"body":{"injectables/CartService.html":{}}}],["allusers",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["allusers.length",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["alluserslength",{"_index":648,"title":{},"body":{"injectables/ProductsService.html":{}}}],["already",{"_index":638,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["api",{"_index":933,"title":{},"body":{"index.html":{}}}],["apiand",{"_index":970,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":45,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":980,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":60,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":53,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":314,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["async",{"_index":132,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atlas",{"_index":958,"title":{},"body":{"index.html":{}}}],["auth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.local.strategy",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":101,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authlocalstrategy",{"_index":395,"title":{},"body":{"controllers/LoginController.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":941,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":110,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":193,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["back",{"_index":978,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":363,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare",{"_index":374,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["bcrypt.hash",{"_index":431,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["body",{"_index":179,"title":{},"body":{"controllers/CartController.html":{},"controllers/LoginController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":986,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":983,"title":{},"body":{"modules.html":{}}}],["cart",{"_index":122,"title":{"interfaces/Cart.html":{}},"body":{"interfaces/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cart.controller",{"_index":224,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.dto",{"_index":679,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["cart.products",{"_index":281,"title":{},"body":{"injectables/CartService.html":{}}}],["cart.service",{"_index":185,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["cartcontroller",{"_index":130,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartdto",{"_index":143,"title":{"classes/CartDto.html":{}},"body":{"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["cartmodel",{"_index":237,"title":{},"body":{"injectables/CartService.html":{}}}],["cartmodule",{"_index":67,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartschema",{"_index":225,"title":{},"body":{"modules/CartModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartservice",{"_index":184,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["categories",{"_index":659,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categories.push(product.category",{"_index":661,"title":{},"body":{"injectables/ProductsService.html":{}}}],["category",{"_index":501,"title":{},"body":{"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["cet",{"_index":489,"title":{},"body":{"injectables/LogsService.html":{}}}],["check",{"_index":277,"title":{},"body":{"injectables/CartService.html":{}}}],["city",{"_index":9,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/Address.html":{},"classes/AddressDto.html":{},"classes/CartDto.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"classes/LogsDto.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"classes/ProductsCartDto.html":{},"classes/ProductsDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{}},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"classes/CartDto.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"classes/LogsDto.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"classes/ProductsCartDto.html":{},"classes/ProductsDto.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{},"overview.html":{}}}],["clone",{"_index":968,"title":{},"body":{"index.html":{}}}],["cluster",{"_index":962,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":220,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_imports",{"_index":221,"title":{},"body":{"modules/CartModule.html":{}}}],["cluster_cartmodule_providers",{"_index":222,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":404,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":406,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_providers",{"_index":405,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":457,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":458,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_providers",{"_index":459,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":588,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":591,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":589,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":590,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":773,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":774,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":776,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":775,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["command",{"_index":966,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["config.mongouri",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["config/key",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":290,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"classes/UpdateUsersDto.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":190,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(_logsmodel",{"_index":468,"title":{},"body":{"injectables/LogsService.html":{}}}],["constructor(jwtservice",{"_index":423,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(logsservice",{"_index":238,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":55,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(usersservice",{"_index":346,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contents",{"_index":934,"title":{},"body":{"index.html":{}}}],["controller",{"_index":44,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/LoginController.html":{},"controllers/LogsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/LoginController.html":{},"controllers/LogsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cart",{"_index":189,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('login",{"_index":394,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('logs",{"_index":449,"title":{},"body":{"controllers/LogsController.html":{}}}],["controller('products",{"_index":566,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('users",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/LogsController.html":{},"modules/LogsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["converting",{"_index":285,"title":{},"body":{"injectables/CartService.html":{}}}],["copy",{"_index":943,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":862,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":960,"title":{},"body":{"index.html":{}}}],["created",{"_index":301,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{}}}],["createproduct",{"_index":521,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(productdata",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createuser",{"_index":718,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(@body",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(usersdata",{"_index":726,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["creating",{"_index":293,"title":{},"body":{"injectables/CartService.html":{}}}],["currcategory",{"_index":668,"title":{},"body":{"injectables/ProductsService.html":{}}}],["current",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":436,"title":{},"body":{"injectables/LoginService.html":{}}}],["database",{"_index":295,"title":{},"body":{"injectables/CartService.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":125,"title":{},"body":{"interfaces/Cart.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["date().tolocalestring",{"_index":486,"title":{},"body":{"injectables/LogsService.html":{}}}],["date(cart.date",{"_index":292,"title":{},"body":{"injectables/CartService.html":{}}}],["date(enddate",{"_index":313,"title":{},"body":{"injectables/CartService.html":{}}}],["date(startdate",{"_index":311,"title":{},"body":{"injectables/CartService.html":{}}}],["dateadded",{"_index":502,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["dateofregistration",{"_index":704,"title":{},"body":{"classes/Users.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":288,"title":{},"body":{"injectables/CartService.html":{}}}],["decorators",{"_index":33,"title":{},"body":{"classes/AddressDto.html":{},"controllers/AppController.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"controllers/LoginController.html":{},"controllers/LogsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{}}}],["default",{"_index":352,"title":{},"body":{"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/UpdatePasswordDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":180,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["delete(':_id",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":151,"title":{},"body":{"controllers/CartController.html":{}}}],["deletecart",{"_index":134,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["deletecart(@param('id",{"_index":209,"title":{},"body":{"controllers/CartController.html":{}}}],["deletecart(id",{"_index":150,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["deleteproduct",{"_index":522,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('_id",{"_index":579,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":538,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteuser",{"_index":719,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('_id",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":729,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":62,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":315,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["descending",{"_index":323,"title":{},"body":{"injectables/CartService.html":{}}}],["description",{"_index":503,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":939,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["duplicates",{"_index":663,"title":{},"body":{"injectables/ProductsService.html":{}}}],["each",{"_index":219,"title":{},"body":{"classes/CartDto.html":{}}}],["eliminate",{"_index":662,"title":{},"body":{"injectables/ProductsService.html":{}}}],["email",{"_index":705,"title":{},"body":{"classes/Users.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":979,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":250,"title":{},"body":{"injectables/CartService.html":{}}}],["enddateobj",{"_index":155,"title":{},"body":{"controllers/CartController.html":{}}}],["enddateobj.enddate",{"_index":198,"title":{},"body":{"controllers/CartController.html":{}}}],["equal",{"_index":308,"title":{},"body":{"injectables/CartService.html":{}}}],["errorifcartnotexist",{"_index":234,"title":{},"body":{"injectables/CartService.html":{}}}],["errorifcartnotexist(id",{"_index":247,"title":{},"body":{"injectables/CartService.html":{}}}],["errorifemailexists",{"_index":787,"title":{},"body":{"injectables/UsersService.html":{}}}],["errorifemailexists(email",{"_index":796,"title":{},"body":{"injectables/UsersService.html":{}}}],["errorifproductexist",{"_index":597,"title":{},"body":{"injectables/ProductsService.html":{}}}],["errorifproductexist(productdata",{"_index":606,"title":{},"body":{"injectables/ProductsService.html":{}}}],["errorifusernameexists",{"_index":788,"title":{},"body":{"injectables/UsersService.html":{}}}],["errorifusernameexists(username",{"_index":798,"title":{},"body":{"injectables/UsersService.html":{}}}],["exec",{"_index":637,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["exist",{"_index":328,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":279,"title":{},"body":{"injectables/CartService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":420,"title":{},"body":{"modules/LoginModule.html":{}}}],["export",{"_index":25,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":367,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filtercartsbydate",{"_index":135,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["filtercartsbydate(startdate",{"_index":249,"title":{},"body":{"injectables/CartService.html":{}}}],["filtercartsbydate(startdateobj",{"_index":154,"title":{},"body":{"controllers/CartController.html":{}}}],["find",{"_index":649,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findandsort",{"_index":598,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findandsort(sort",{"_index":608,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":641,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyidandremove(id",{"_index":655,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["finding",{"_index":306,"title":{},"body":{"injectables/CartService.html":{}}}],["firstname",{"_index":492,"title":{},"body":{"classes/Name.html":{},"classes/NameDto.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":372,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":927,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatedate",{"_index":466,"title":{},"body":{"injectables/LogsService.html":{},"injectables/UsersService.html":{}}}],["geolocation",{"_index":10,"title":{"classes/Geolocation.html":{}},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"classes/Geolocation.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["geolocation.dto",{"_index":43,"title":{},"body":{"classes/AddressDto.html":{},"classes/UpdateGeolocationDto.html":{}}}],["geolocation.interface",{"_index":24,"title":{},"body":{"classes/Address.html":{}}}],["geolocationdto",{"_index":32,"title":{"classes/GeolocationDto.html":{}},"body":{"classes/AddressDto.html":{},"classes/GeolocationDto.html":{},"classes/UpdateGeolocationDto.html":{},"coverage.html":{}}}],["geolocationschema",{"_index":784,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':_id",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["get(':id",{"_index":160,"title":{},"body":{"controllers/CartController.html":{}}}],["get('categories",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('categories/:category",{"_index":551,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('filtercartsbydate",{"_index":156,"title":{},"body":{"controllers/CartController.html":{}}}],["get('getcartslimit",{"_index":164,"title":{},"body":{"controllers/CartController.html":{}}}],["get('limit",{"_index":735,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('sort/:sorttype",{"_index":171,"title":{},"body":{"controllers/CartController.html":{}}}],["get('sort/:typeofsort",{"_index":554,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["get('user/:userid",{"_index":168,"title":{},"body":{"controllers/CartController.html":{}}}],["getallcategories",{"_index":523,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getallproducts",{"_index":524,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getallusers",{"_index":720,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getcart",{"_index":136,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getcart(@param('id",{"_index":205,"title":{},"body":{"controllers/CartController.html":{}}}],["getcart(id",{"_index":159,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getcartmodel",{"_index":265,"title":{},"body":{"injectables/CartService.html":{}}}],["getcarts",{"_index":137,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getcartslimit",{"_index":138,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getcartslimit(@query",{"_index":199,"title":{},"body":{"controllers/CartController.html":{}}}],["getcartslimit(limit",{"_index":255,"title":{},"body":{"injectables/CartService.html":{}}}],["getcartslimit(limitobj",{"_index":163,"title":{},"body":{"controllers/CartController.html":{}}}],["gethello",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlogs",{"_index":446,"title":{},"body":{"controllers/LogsController.html":{},"injectables/LogsService.html":{}}}],["getlogsmodel",{"_index":475,"title":{},"body":{"injectables/LogsService.html":{}}}],["getproduct",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproduct(@param('_id",{"_index":575,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproduct(id",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproductslimit",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproductslimit(limitobject",{"_index":547,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductslimit(limitstring",{"_index":613,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getproductsmodel",{"_index":623,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificcategory",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getspecificcategory(category",{"_index":550,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getter",{"_index":821,"title":{},"body":{"injectables/UsersService.html":{}}}],["getting",{"_index":929,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":721,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuser(@param('_id",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(id",{"_index":732,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getusercarts",{"_index":139,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getusercarts(userid",{"_index":167,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["getuserslimit",{"_index":722,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserslimit(@query",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserslimit(limitobject",{"_index":734,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserslimit(limitstring",{"_index":803,"title":{},"body":{"injectables/UsersService.html":{}}}],["getusersmodel",{"_index":816,"title":{},"body":{"injectables/UsersService.html":{}}}],["git",{"_index":967,"title":{},"body":{"index.html":{}}}],["greather",{"_index":307,"title":{},"body":{"injectables/CartService.html":{}}}],["gte",{"_index":310,"title":{},"body":{"injectables/CartService.html":{}}}],["hashpassword",{"_index":826,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception",{"_index":267,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["https://github.com/jjovana314/store",{"_index":969,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":268,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.bad_request",{"_index":318,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.unauthorized",{"_index":670,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["hu",{"_index":487,"title":{},"body":{"injectables/LogsService.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":153,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"interfaces/Logs.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id.length",{"_index":669,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["idlength",{"_index":625,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":504,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":23,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/UpdatePasswordDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":270,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('cart",{"_index":275,"title":{},"body":{"injectables/CartService.html":{}}}],["injectmodel('login",{"_index":429,"title":{},"body":{"injectables/LoginService.html":{}}}],["injectmodel('logs",{"_index":479,"title":{},"body":{"injectables/LogsService.html":{}}}],["injectmodel('products",{"_index":627,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectmodel('users",{"_index":819,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository",{"_index":358,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":954,"title":{},"body":{"index.html":{}}}],["installing",{"_index":936,"title":{},"body":{"index.html":{}}}],["installnpm",{"_index":972,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":942,"title":{},"body":{"index.html":{}}}],["interface",{"_index":121,"title":{"interfaces/Cart.html":{},"interfaces/Logs.html":{},"interfaces/ProductsCart.html":{}},"body":{"interfaces/Cart.html":{},"interfaces/Logs.html":{},"interfaces/ProductsCart.html":{},"coverage.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/Cart.html":{},"interfaces/Logs.html":{},"interfaces/ProductsCart.html":{},"overview.html":{}}}],["isemail",{"_index":767,"title":{},"body":{"classes/UsersDto.html":{}}}],["jovana",{"_index":981,"title":{},"body":{"index.html":{}}}],["jovanovi",{"_index":982,"title":{},"body":{"index.html":{}}}],["jwtmodule",{"_index":410,"title":{},"body":{"modules/LoginModule.html":{}}}],["jwtmodule.register",{"_index":414,"title":{},"body":{"modules/LoginModule.html":{}}}],["jwtservice",{"_index":424,"title":{},"body":{"injectables/LoginService.html":{}}}],["lastname",{"_index":493,"title":{},"body":{"classes/Name.html":{},"classes/NameDto.html":{},"miscellaneous/variables.html":{}}}],["lat",{"_index":335,"title":{},"body":{"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":650,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["less",{"_index":309,"title":{},"body":{"injectables/CartService.html":{}}}],["limit",{"_index":257,"title":{},"body":{"injectables/CartService.html":{}}}],["limitnumber",{"_index":646,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["limitobj",{"_index":166,"title":{},"body":{"controllers/CartController.html":{}}}],["limitobject",{"_index":549,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["limitobject.limit",{"_index":571,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["limitstring",{"_index":615,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["link",{"_index":964,"title":{},"body":{"index.html":{}}}],["listens",{"_index":974,"title":{},"body":{"index.html":{}}}],["local",{"_index":362,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localstrategy",{"_index":111,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":483,"title":{},"body":{"injectables/LogsService.html":{}}}],["log.save",{"_index":485,"title":{},"body":{"injectables/LogsService.html":{}}}],["logger",{"_index":343,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger(localstrategy.name",{"_index":354,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["login",{"_index":377,"title":{"classes/Login.html":{}},"body":{"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["login(@body",{"_index":396,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(logindata",{"_index":385,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.controller",{"_index":409,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.service",{"_index":391,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login/login.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["logincontroller",{"_index":383,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["logindata",{"_index":388,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logindata.password",{"_index":399,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logindata.username",{"_index":398,"title":{},"body":{"controllers/LoginController.html":{}}}],["logindto",{"_index":386,"title":{"classes/LoginDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginmodel",{"_index":425,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodule",{"_index":68,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginschema",{"_index":412,"title":{},"body":{"modules/LoginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginservice",{"_index":390,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["logs",{"_index":440,"title":{"interfaces/Logs.html":{}},"body":{"interfaces/Logs.html":{},"controllers/LogsController.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"coverage.html":{}}}],["logs.controller",{"_index":461,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.service",{"_index":448,"title":{},"body":{"controllers/LogsController.html":{},"modules/LogsModule.html":{}}}],["logs/logs.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["logscontroller",{"_index":444,"title":{"controllers/LogsController.html":{}},"body":{"controllers/LogsController.html":{},"modules/LogsModule.html":{},"coverage.html":{}}}],["logsdto",{"_index":451,"title":{"classes/LogsDto.html":{}},"body":{"classes/LogsDto.html":{},"injectables/LogsService.html":{},"coverage.html":{}}}],["logsmodel",{"_index":467,"title":{},"body":{"injectables/LogsService.html":{}}}],["logsmodule",{"_index":69,"title":{"modules/LogsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["logsschema",{"_index":462,"title":{},"body":{"modules/LogsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logsservice",{"_index":239,"title":{"injectables/LogsService.html":{}},"body":{"injectables/CartService.html":{},"controllers/LogsController.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":336,"title":{},"body":{"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"miscellaneous/variables.html":{}}}],["lte",{"_index":312,"title":{},"body":{"injectables/CartService.html":{}}}],["machine",{"_index":947,"title":{},"body":{"index.html":{}}}],["make",{"_index":666,"title":{},"body":{"injectables/ProductsService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":651,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["methods",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":926,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":287,"title":{},"body":{"injectables/CartService.html":{}}}],["model",{"_index":243,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["models/dto/cart.dto",{"_index":186,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["models/dto/login.dto",{"_index":392,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["models/dto/logs.dto",{"_index":477,"title":{},"body":{"injectables/LogsService.html":{}}}],["models/dto/products.dto",{"_index":562,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["models/dto/update.cart.dto",{"_index":187,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["models/dto/update.password.dto",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/update.products.dto",{"_index":563,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["models/dto/update.users.dto",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["models/dto/users.dto",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["models/interfaces/cart.interface",{"_index":188,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["models/interfaces/login.interface",{"_index":393,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["models/interfaces/logs.interface",{"_index":478,"title":{},"body":{"injectables/LogsService.html":{}}}],["models/interfaces/products.interface",{"_index":564,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["models/interfaces/users.interface",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["models/schemas/address.schema",{"_index":781,"title":{},"body":{"modules/UsersModule.html":{}}}],["models/schemas/cart.schema",{"_index":226,"title":{},"body":{"modules/CartModule.html":{}}}],["models/schemas/geolocation.schema",{"_index":785,"title":{},"body":{"modules/UsersModule.html":{}}}],["models/schemas/login.schema",{"_index":413,"title":{},"body":{"modules/LoginModule.html":{}}}],["models/schemas/logs.schema",{"_index":463,"title":{},"body":{"modules/LogsModule.html":{}}}],["models/schemas/name.schema",{"_index":783,"title":{},"body":{"modules/UsersModule.html":{}}}],["models/schemas/products.cart.schema",{"_index":228,"title":{},"body":{"modules/CartModule.html":{}}}],["models/schemas/products.schema",{"_index":594,"title":{},"body":{"modules/ProductsModule.html":{}}}],["models/schemas/users.schema",{"_index":779,"title":{},"body":{"modules/UsersModule.html":{}}}],["module",{"_index":59,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":61,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":957,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":271,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":231,"title":{},"body":{"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":147,"title":{"classes/Name.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["name.dto",{"_index":686,"title":{},"body":{"classes/UpdateNameDto.html":{},"classes/UsersDto.html":{}}}],["name.interface",{"_index":715,"title":{},"body":{"classes/Users.html":{}}}],["namedto",{"_index":496,"title":{"classes/NameDto.html":{}},"body":{"classes/NameDto.html":{},"classes/UpdateNameDto.html":{},"classes/UsersDto.html":{},"coverage.html":{}}}],["nameschema",{"_index":782,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":953,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":977,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":411,"title":{},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":675,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":357,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":359,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":291,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcart",{"_index":296,"title":{},"body":{"injectables/CartService.html":{}}}],["newcart.save",{"_index":299,"title":{},"body":{"injectables/CartService.html":{}}}],["newlog",{"_index":481,"title":{},"body":{"injectables/LogsService.html":{}}}],["newpassword",{"_index":690,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["newpasswordhashed",{"_index":814,"title":{},"body":{"injectables/UsersService.html":{}}}],["newproduct",{"_index":631,"title":{},"body":{"injectables/ProductsService.html":{}}}],["newproduct.save",{"_index":633,"title":{},"body":{"injectables/ProductsService.html":{}}}],["newuser",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.save",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":955,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":269,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["npm",{"_index":971,"title":{},"body":{"index.html":{}}}],["number",{"_index":11,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["number(limitstring",{"_index":647,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":289,"title":{},"body":{"injectables/CartService.html":{}}}],["old",{"_index":861,"title":{},"body":{"injectables/UsersService.html":{}}}],["omittype",{"_index":701,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["omittype(usersdto",{"_index":702,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["online",{"_index":931,"title":{},"body":{"index.html":{}}}],["optional",{"_index":148,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outside",{"_index":823,"title":{},"body":{"injectables/UsersService.html":{}}}],["overview",{"_index":987,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":896,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":181,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["param('_id",{"_index":577,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["param('category",{"_index":574,"title":{},"body":{"controllers/ProductsController.html":{}}}],["param('id",{"_index":207,"title":{},"body":{"controllers/CartController.html":{}}}],["param('sorttype",{"_index":201,"title":{},"body":{"controllers/CartController.html":{}}}],["param('typeofsort",{"_index":572,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["param('userid",{"_index":203,"title":{},"body":{"controllers/CartController.html":{}}}],["parameters",{"_index":146,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":674,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{}}}],["partialtype(addressdto",{"_index":677,"title":{},"body":{"classes/UpdateAddressDto.html":{}}}],["partialtype(cartdto",{"_index":680,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["partialtype(geolocationdto",{"_index":683,"title":{},"body":{"classes/UpdateGeolocationDto.html":{}}}],["partialtype(namedto",{"_index":687,"title":{},"body":{"classes/UpdateNameDto.html":{}}}],["partialtype(productsdto",{"_index":696,"title":{},"body":{"classes/UpdateProductsDto.html":{}}}],["party",{"_index":417,"title":{},"body":{"modules/LoginModule.html":{}}}],["passport",{"_index":361,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":356,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":368,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passswordsequal",{"_index":373,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":349,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["passwordhashed",{"_index":430,"title":{},"body":{"injectables/LoginService.html":{}}}],["passwordupdate",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passwordupdate.newpassword",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["passwordupdatehashed",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["pg",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":30,"title":{},"body":{"classes/AddressDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":975,"title":{},"body":{"index.html":{}}}],["post",{"_index":144,"title":{},"body":{"controllers/CartController.html":{},"controllers/LoginController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["post('list",{"_index":532,"title":{},"body":{"controllers/ProductsController.html":{}}}],["postman",{"_index":956,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CartController.html":{},"controllers/LoginController.html":{},"controllers/LogsController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":935,"title":{},"body":{"index.html":{}}}],["price",{"_index":505,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["primarykey",{"_index":818,"title":{},"body":{"injectables/UsersService.html":{}}}],["private",{"_index":191,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":280,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{}}}],["product.productid",{"_index":283,"title":{},"body":{"injectables/CartService.html":{}}}],["productdata",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productdata.title",{"_index":636,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productid",{"_index":278,"title":{},"body":{"injectables/CartService.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":126,"title":{"classes/Products.html":{}},"body":{"interfaces/Cart.html":{},"classes/CartDto.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products.cart.dto",{"_index":218,"title":{},"body":{"classes/CartDto.html":{},"classes/UpdateProductsCartDto.html":{}}}],["products.cart.interface",{"_index":129,"title":{},"body":{"interfaces/Cart.html":{}}}],["products.controller",{"_index":595,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.dto",{"_index":695,"title":{},"body":{"classes/UpdateProductsDto.html":{}}}],["products.foreach((product",{"_index":660,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service",{"_index":565,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["productscart",{"_index":128,"title":{"interfaces/ProductsCart.html":{}},"body":{"interfaces/Cart.html":{},"modules/CartModule.html":{},"interfaces/ProductsCart.html":{},"coverage.html":{}}}],["productscartdto",{"_index":213,"title":{"classes/ProductsCartDto.html":{}},"body":{"classes/CartDto.html":{},"classes/ProductsCartDto.html":{},"classes/UpdateProductsCartDto.html":{},"coverage.html":{}}}],["productscartschema",{"_index":227,"title":{},"body":{"modules/CartModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":518,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsdto",{"_index":531,"title":{"classes/ProductsDto.html":{}},"body":{"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductsDto.html":{},"coverage.html":{}}}],["productslist",{"_index":534,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["productslist.foreach(async",{"_index":643,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsmodel",{"_index":600,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsmodule",{"_index":70,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsschema",{"_index":593,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productsservice",{"_index":240,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/CartService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productupdatedata",{"_index":561,"title":{},"body":{"controllers/ProductsController.html":{}}}],["project",{"_index":944,"title":{},"body":{"index.html":{}}}],["promise",{"_index":149,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promises",{"_index":320,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"interfaces/Cart.html":{},"classes/CartDto.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"interfaces/Logs.html":{},"classes/LogsDto.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"classes/ProductsDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":344,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["purposes",{"_index":949,"title":{},"body":{"index.html":{}}}],["put",{"_index":183,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["put(':_id",{"_index":559,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":177,"title":{},"body":{"controllers/CartController.html":{}}}],["put('update_password/:_id",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["quantity",{"_index":514,"title":{},"body":{"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":182,"title":{},"body":{"controllers/CartController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["readonly",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["removed",{"_index":657,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["removeduser",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeduser._id",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeduser.username.tostring",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["require('bcrypt",{"_index":364,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":298,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["result._id",{"_index":302,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["result.title",{"_index":634,"title":{},"body":{"injectables/ProductsService.html":{}}}],["result.username.tostring",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":26,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":331,"title":{},"body":{"injectables/CartService.html":{}}}],["returns",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":951,"title":{},"body":{"index.html":{}}}],["running",{"_index":946,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":428,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saltrounds",{"_index":365,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["saving",{"_index":294,"title":{},"body":{"injectables/CartService.html":{}}}],["schema",{"_index":232,"title":{},"body":{"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["secret",{"_index":415,"title":{},"body":{"modules/LoginModule.html":{}}}],["service",{"_index":824,"title":{},"body":{"injectables/UsersService.html":{}}}],["set",{"_index":857,"title":{},"body":{"injectables/UsersService.html":{}}}],["set(categories",{"_index":664,"title":{},"body":{"injectables/ProductsService.html":{}}}],["shopping",{"_index":932,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":419,"title":{},"body":{"modules/LoginModule.html":{}}}],["sort",{"_index":317,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["sortcarts",{"_index":140,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["sortcarts(sorttype",{"_index":170,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["sorting",{"_index":322,"title":{},"body":{"injectables/CartService.html":{}}}],["sortproducts",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["sortproducts(sort",{"_index":617,"title":{},"body":{"injectables/ProductsService.html":{}}}],["sortproducts(typeofsort",{"_index":553,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sortresults",{"_index":723,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sortresults(sort",{"_index":805,"title":{},"body":{"injectables/UsersService.html":{}}}],["sortresults(typeofsort",{"_index":737,"title":{},"body":{"controllers/UsersController.html":{}}}],["sorttype",{"_index":173,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"controllers/LogsController.html":{},"classes/LogsDto.html":{},"modules/LogsModule.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../address.schema.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.local.strategy.ts",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart.schema.ts",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocation.schema.ts",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.schema.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.service.ts",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logs.schema.ts",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../name.schema.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.cart.schema.ts",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.schema.ts",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.service.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.schema.ts",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.local.strategy",{"_index":389,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/auth/auth.local.strategy.ts",{"_index":342,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.local.strategy.ts:14",{"_index":347,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/auth.local.strategy.ts:21",{"_index":350,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/auth.module",{"_index":408,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/auth/auth.module.ts",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts",{"_index":131,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:23",{"_index":145,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:28",{"_index":162,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:33",{"_index":157,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:42",{"_index":165,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:47",{"_index":172,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:54",{"_index":169,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:61",{"_index":161,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:66",{"_index":178,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:73",{"_index":152,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":223,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":233,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:111",{"_index":259,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:115",{"_index":248,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:124",{"_index":261,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:140",{"_index":246,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:17",{"_index":244,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:25",{"_index":266,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:29",{"_index":245,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:53",{"_index":254,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:57",{"_index":253,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:62",{"_index":251,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:75",{"_index":263,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:84",{"_index":260,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:99",{"_index":256,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/models/dto/cart.dto.ts",{"_index":211,"title":{},"body":{"classes/CartDto.html":{},"coverage.html":{}}}],["src/cart/models/dto/cart.dto.ts:11",{"_index":216,"title":{},"body":{"classes/CartDto.html":{}}}],["src/cart/models/dto/cart.dto.ts:6",{"_index":217,"title":{},"body":{"classes/CartDto.html":{}}}],["src/cart/models/dto/cart.dto.ts:7",{"_index":212,"title":{},"body":{"classes/CartDto.html":{}}}],["src/cart/models/dto/products.cart.dto.ts",{"_index":515,"title":{},"body":{"classes/ProductsCartDto.html":{},"coverage.html":{}}}],["src/cart/models/dto/products.cart.dto.ts:2",{"_index":516,"title":{},"body":{"classes/ProductsCartDto.html":{}}}],["src/cart/models/dto/products.cart.dto.ts:3",{"_index":517,"title":{},"body":{"classes/ProductsCartDto.html":{}}}],["src/cart/models/dto/update.cart.dto.ts",{"_index":678,"title":{},"body":{"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["src/cart/models/dto/update.products.cart.dto.ts",{"_index":693,"title":{},"body":{"classes/UpdateProductsCartDto.html":{},"coverage.html":{}}}],["src/cart/models/interfaces/cart.interface.ts",{"_index":124,"title":{},"body":{"interfaces/Cart.html":{},"coverage.html":{}}}],["src/cart/models/interfaces/products.cart.interface.ts",{"_index":513,"title":{},"body":{"interfaces/ProductsCart.html":{},"coverage.html":{}}}],["src/cart/models/schemas/cart.schema.ts",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cart/models/schemas/products.cart.schema.ts",{"_index":875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/key.ts",{"_index":965,"title":{},"body":{"index.html":{}}}],["src/login/login.controller.ts",{"_index":384,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/login/login.controller.ts:14",{"_index":387,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.module.ts",{"_index":407,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/login/login.service.ts",{"_index":422,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/login/login.service.ts:12",{"_index":426,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:18",{"_index":427,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/models/dto/login.dto.ts",{"_index":401,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/login/models/dto/login.dto.ts:2",{"_index":403,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/models/dto/login.dto.ts:3",{"_index":402,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/models/interfaces/login.interface.ts",{"_index":378,"title":{},"body":{"classes/Login.html":{},"coverage.html":{}}}],["src/login/models/interfaces/login.interface.ts:2",{"_index":382,"title":{},"body":{"classes/Login.html":{}}}],["src/login/models/interfaces/login.interface.ts:3",{"_index":380,"title":{},"body":{"classes/Login.html":{}}}],["src/login/models/interfaces/login.interface.ts:4",{"_index":381,"title":{},"body":{"classes/Login.html":{}}}],["src/login/models/schemas/login.schema.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logs/logs.controller.ts",{"_index":445,"title":{},"body":{"controllers/LogsController.html":{},"coverage.html":{}}}],["src/logs/logs.controller.ts:11",{"_index":447,"title":{},"body":{"controllers/LogsController.html":{}}}],["src/logs/logs.module",{"_index":229,"title":{},"body":{"modules/CartModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["src/logs/logs.module.ts",{"_index":460,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/logs/logs.service",{"_index":272,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["src/logs/logs.service.ts",{"_index":464,"title":{},"body":{"injectables/LogsService.html":{},"coverage.html":{}}}],["src/logs/logs.service.ts:13",{"_index":476,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/logs/logs.service.ts:17",{"_index":472,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/logs/logs.service.ts:28",{"_index":473,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/logs/logs.service.ts:34",{"_index":474,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/logs/logs.service.ts:8",{"_index":469,"title":{},"body":{"injectables/LogsService.html":{}}}],["src/logs/models/dto/logs.dto.ts",{"_index":452,"title":{},"body":{"classes/LogsDto.html":{},"coverage.html":{}}}],["src/logs/models/dto/logs.dto.ts:2",{"_index":455,"title":{},"body":{"classes/LogsDto.html":{}}}],["src/logs/models/dto/logs.dto.ts:3",{"_index":456,"title":{},"body":{"classes/LogsDto.html":{}}}],["src/logs/models/dto/logs.dto.ts:4",{"_index":453,"title":{},"body":{"classes/LogsDto.html":{}}}],["src/logs/models/dto/logs.dto.ts:5",{"_index":454,"title":{},"body":{"classes/LogsDto.html":{}}}],["src/logs/models/interfaces/logs.interface.ts",{"_index":441,"title":{},"body":{"interfaces/Logs.html":{},"coverage.html":{}}}],["src/logs/models/schemas/logs.schema.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/models/dto/products.dto.ts",{"_index":581,"title":{},"body":{"classes/ProductsDto.html":{},"coverage.html":{}}}],["src/products/models/dto/products.dto.ts:2",{"_index":587,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/products.dto.ts:3",{"_index":586,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/products.dto.ts:4",{"_index":584,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/products.dto.ts:5",{"_index":582,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/products.dto.ts:6",{"_index":585,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/products.dto.ts:7",{"_index":583,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/models/dto/update.products.dto.ts",{"_index":694,"title":{},"body":{"classes/UpdateProductsDto.html":{},"coverage.html":{}}}],["src/products/models/interfaces/products.interface.ts",{"_index":500,"title":{},"body":{"classes/Products.html":{},"coverage.html":{}}}],["src/products/models/interfaces/products.interface.ts:2",{"_index":512,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/interfaces/products.interface.ts:3",{"_index":511,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/interfaces/products.interface.ts:4",{"_index":509,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/interfaces/products.interface.ts:5",{"_index":507,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/interfaces/products.interface.ts:6",{"_index":510,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/interfaces/products.interface.ts:7",{"_index":508,"title":{},"body":{"classes/Products.html":{}}}],["src/products/models/schemas/products.schema.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/products.controller.ts",{"_index":519,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:23",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:31",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:36",{"_index":548,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:45",{"_index":555,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:53",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:59",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:64",{"_index":552,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:72",{"_index":546,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:77",{"_index":560,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:87",{"_index":540,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module",{"_index":230,"title":{},"body":{"modules/CartModule.html":{}}}],["src/products/products.module.ts",{"_index":592,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service",{"_index":273,"title":{},"body":{"injectables/CartService.html":{}}}],["src/products/products.service.ts",{"_index":596,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/products.service.ts:109",{"_index":609,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:122",{"_index":620,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:139",{"_index":605,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:146",{"_index":610,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:156",{"_index":616,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:17",{"_index":602,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:174",{"_index":622,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:23",{"_index":624,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:27",{"_index":604,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:45",{"_index":607,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:57",{"_index":612,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:70",{"_index":611,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:74",{"_index":603,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:80",{"_index":614,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:99",{"_index":618,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/users/models/dto/address.dto.ts",{"_index":29,"title":{},"body":{"classes/AddressDto.html":{},"coverage.html":{}}}],["src/users/models/dto/address.dto.ts:10",{"_index":39,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/address.dto.ts:14",{"_index":35,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/address.dto.ts:16",{"_index":37,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/address.dto.ts:7",{"_index":31,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/address.dto.ts:8",{"_index":38,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/address.dto.ts:9",{"_index":36,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/users/models/dto/geolocation.dto.ts",{"_index":339,"title":{},"body":{"classes/GeolocationDto.html":{},"coverage.html":{}}}],["src/users/models/dto/geolocation.dto.ts:2",{"_index":340,"title":{},"body":{"classes/GeolocationDto.html":{}}}],["src/users/models/dto/geolocation.dto.ts:3",{"_index":341,"title":{},"body":{"classes/GeolocationDto.html":{}}}],["src/users/models/dto/name.dto.ts",{"_index":497,"title":{},"body":{"classes/NameDto.html":{},"coverage.html":{}}}],["src/users/models/dto/name.dto.ts:2",{"_index":498,"title":{},"body":{"classes/NameDto.html":{}}}],["src/users/models/dto/name.dto.ts:3",{"_index":499,"title":{},"body":{"classes/NameDto.html":{}}}],["src/users/models/dto/update.address.dto.ts",{"_index":672,"title":{},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["src/users/models/dto/update.geolocation.dto.ts",{"_index":682,"title":{},"body":{"classes/UpdateGeolocationDto.html":{},"coverage.html":{}}}],["src/users/models/dto/update.name.dto.ts",{"_index":685,"title":{},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["src/users/models/dto/update.password.dto.ts",{"_index":689,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/users/models/dto/update.password.dto.ts:2",{"_index":691,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["src/users/models/dto/update.users.dto.ts",{"_index":698,"title":{},"body":{"classes/UpdateUsersDto.html":{},"coverage.html":{}}}],["src/users/models/dto/users.dto.ts",{"_index":764,"title":{},"body":{"classes/UsersDto.html":{},"coverage.html":{}}}],["src/users/models/dto/users.dto.ts:10",{"_index":768,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:12",{"_index":772,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:13",{"_index":770,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:17",{"_index":769,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:21",{"_index":765,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:23",{"_index":771,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/dto/users.dto.ts:25",{"_index":766,"title":{},"body":{"classes/UsersDto.html":{}}}],["src/users/models/interfaces/address.interface.ts",{"_index":6,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["src/users/models/interfaces/address.interface.ts:5",{"_index":18,"title":{},"body":{"classes/Address.html":{}}}],["src/users/models/interfaces/address.interface.ts:6",{"_index":21,"title":{},"body":{"classes/Address.html":{}}}],["src/users/models/interfaces/address.interface.ts:7",{"_index":20,"title":{},"body":{"classes/Address.html":{}}}],["src/users/models/interfaces/address.interface.ts:8",{"_index":22,"title":{},"body":{"classes/Address.html":{}}}],["src/users/models/interfaces/address.interface.ts:9",{"_index":19,"title":{},"body":{"classes/Address.html":{}}}],["src/users/models/interfaces/geolocation.interface.ts",{"_index":334,"title":{},"body":{"classes/Geolocation.html":{},"coverage.html":{}}}],["src/users/models/interfaces/geolocation.interface.ts:2",{"_index":337,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/users/models/interfaces/geolocation.interface.ts:3",{"_index":338,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/users/models/interfaces/name.interface.ts",{"_index":491,"title":{},"body":{"classes/Name.html":{},"coverage.html":{}}}],["src/users/models/interfaces/name.interface.ts:2",{"_index":494,"title":{},"body":{"classes/Name.html":{}}}],["src/users/models/interfaces/name.interface.ts:3",{"_index":495,"title":{},"body":{"classes/Name.html":{}}}],["src/users/models/interfaces/users.interface.ts",{"_index":703,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/users/models/interfaces/users.interface.ts:10",{"_index":710,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:11",{"_index":707,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:12",{"_index":712,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:13",{"_index":708,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:6",{"_index":706,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:7",{"_index":709,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:8",{"_index":713,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/interfaces/users.interface.ts:9",{"_index":711,"title":{},"body":{"classes/Users.html":{}}}],["src/users/models/schemas/address.schema.ts",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/models/schemas/geolocation.schema.ts",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/models/schemas/name.schema.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/models/schemas/users.schema",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/models/schemas/users.schema.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":717,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:25",{"_index":727,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":736,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":731,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:49",{"_index":733,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:54",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:72",{"_index":730,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartModule.html":{}}}],["src/users/users.module.ts",{"_index":777,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":274,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/users.service.ts",{"_index":786,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:105",{"_index":804,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:118",{"_index":806,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:128",{"_index":800,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:141",{"_index":809,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:159",{"_index":795,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":807,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:188",{"_index":815,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:198",{"_index":811,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":793,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":817,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":794,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:58",{"_index":801,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:62",{"_index":802,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":799,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:85",{"_index":797,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:97",{"_index":812,"title":{},"body":{"injectables/UsersService.html":{}}}],["start:devapi",{"_index":973,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":252,"title":{},"body":{"injectables/CartService.html":{}}}],["startdateobj",{"_index":158,"title":{},"body":{"controllers/CartController.html":{}}}],["startdateobj.startdate",{"_index":197,"title":{},"body":{"controllers/CartController.html":{}}}],["started",{"_index":930,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":434,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["strategy",{"_index":360,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["street",{"_index":12,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":16,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"interfaces/Logs.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/UpdatePasswordDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":950,"title":{},"body":{"index.html":{}}}],["super",{"_index":369,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":984,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":667,"title":{},"body":{"injectables/ProductsService.html":{}}}],["svg",{"_index":985,"title":{},"body":{"modules.html":{}}}],["table",{"_index":895,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":952,"title":{},"body":{"index.html":{}}}],["testing",{"_index":948,"title":{},"body":{"index.html":{}}}],["this._cartmodel",{"_index":276,"title":{},"body":{"injectables/CartService.html":{}}}],["this._logsmodel",{"_index":480,"title":{},"body":{"injectables/LogsService.html":{}}}],["this._productsmodel",{"_index":628,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this._usersmodel",{"_index":825,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.appservice.gethello",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authlocalstrategy.validate",{"_index":397,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.cartmodel(cartdto",{"_index":297,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.find",{"_index":303,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.find().exec",{"_index":325,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findbyid(id",{"_index":305,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findbyid(id).exec",{"_index":327,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findbyidandremove(id",{"_index":333,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartmodel.findbyidandupdate",{"_index":329,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.addnewcart(cart",{"_index":194,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.deletecart(id",{"_index":210,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.filtercartsbydate",{"_index":196,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.getcart(id",{"_index":206,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.getcarts",{"_index":195,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.getcartslimit(limitobj.limit",{"_index":200,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.getusercarts(userid",{"_index":204,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.sortcarts(sorttype",{"_index":202,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.updatecart(id",{"_index":208,"title":{},"body":{"controllers/CartController.html":{}}}],["this.createproduct(product",{"_index":644,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.errorifcartnotexist(id",{"_index":304,"title":{},"body":{"injectables/CartService.html":{}}}],["this.errorifemailexists(updatedata.email",{"_index":846,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.errorifemailexists(usersdata.email",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.errorifproductexist(productdata",{"_index":629,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.errorifusernameexists(updatedata.username",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.errorifusernameexists(usersdata.username",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findandsort(sort",{"_index":652,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["this.generatedate",{"_index":482,"title":{},"body":{"injectables/LogsService.html":{}}}],["this.getallcategories",{"_index":665,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.getcart(id",{"_index":332,"title":{},"body":{"injectables/CartService.html":{}}}],["this.getproduct(id",{"_index":653,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.getuser(id",{"_index":849,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(logindata",{"_index":433,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel(userdata",{"_index":437,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginservice.login(logindata",{"_index":400,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.logsmodel(newlog",{"_index":484,"title":{},"body":{"injectables/LogsService.html":{}}}],["this.logsmodel.find",{"_index":490,"title":{},"body":{"injectables/LogsService.html":{}}}],["this.logsservice.addlogs",{"_index":300,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["this.logsservice.addlogs(result.title",{"_index":656,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.logsservice.generatedate",{"_index":630,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["this.logsservice.getlogs",{"_index":450,"title":{},"body":{"controllers/LogsController.html":{}}}],["this.productsmodel",{"_index":640,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel(productdata",{"_index":632,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.find",{"_index":642,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.find().exec",{"_index":658,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findbyidandupdate",{"_index":654,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findone",{"_index":635,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice",{"_index":567,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.addproductslist(productslist",{"_index":569,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":580,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getallcategories",{"_index":573,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproduct",{"_index":282,"title":{},"body":{"injectables/CartService.html":{}}}],["this.productsservice.getproduct(id",{"_index":576,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproductslimit",{"_index":570,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct",{"_index":578,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.userexist(id",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel(usersdata",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.find",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findbyid(id",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findbyid(id).exec",{"_index":860,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findbyidandupdate",{"_index":847,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersmodel.findone",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(usersdata",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getallusers",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuser(cart.userid",{"_index":284,"title":{},"body":{"injectables/CartService.html":{}}}],["this.usersservice.getuser(id",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getuserslimit",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.sortresults(typeofsort",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatepassword",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser(updatedata",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.usersmodel.findone",{"_index":371,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.validateidlength(id",{"_index":639,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["this.validatepassword(id",{"_index":856,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.validatesorttype(sorttype",{"_index":319,"title":{},"body":{"injectables/CartService.html":{}}}],["throw",{"_index":316,"title":{},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["timezone",{"_index":488,"title":{},"body":{"injectables/LogsService.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":506,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":379,"title":{},"body":{"classes/Login.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":937,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":40,"title":{},"body":{"classes/AddressDto.html":{},"classes/CartDto.html":{},"classes/UsersDto.html":{},"dependencies.html":{}}}],["true",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CartDto.html":{}}}],["true})@type(undefined",{"_index":215,"title":{},"body":{"classes/CartDto.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"classes/Geolocation.html":{},"classes/GeolocationDto.html":{},"injectables/LocalStrategy.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"interfaces/Logs.html":{},"classes/LogsDto.html":{},"injectables/LogsService.html":{},"classes/Name.html":{},"classes/NameDto.html":{},"classes/Products.html":{},"interfaces/ProductsCart.html":{},"classes/ProductsCartDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/UpdatePasswordDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeofsort",{"_index":556,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["typeorm",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":676,"title":{},"body":{"classes/UpdateAddressDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateGeolocationDto.html":{},"classes/UpdateNameDto.html":{},"classes/UpdateProductsCartDto.html":{},"classes/UpdateProductsDto.html":{},"classes/UpdateUsersDto.html":{},"dependencies.html":{}}}],["unauthorizedexception",{"_index":355,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["underwater",{"_index":416,"title":{},"body":{"modules/LoginModule.html":{}}}],["unknown",{"_index":258,"title":{},"body":{"injectables/CartService.html":{},"controllers/LogsController.html":{},"injectables/LogsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["up",{"_index":945,"title":{},"body":{"index.html":{}}}],["updateaddressdto",{"_index":671,"title":{"classes/UpdateAddressDto.html":{}},"body":{"classes/UpdateAddressDto.html":{},"coverage.html":{}}}],["updatecart",{"_index":141,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["updatecart(id",{"_index":174,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["updatecartdto",{"_index":176,"title":{"classes/UpdateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["updated",{"_index":330,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["updatedata",{"_index":175,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateduser",{"_index":848,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateduser.username.tostring",{"_index":850,"title":{},"body":{"injectables/UsersService.html":{}}}],["updategeolocationdto",{"_index":681,"title":{"classes/UpdateGeolocationDto.html":{}},"body":{"classes/UpdateGeolocationDto.html":{},"coverage.html":{}}}],["updatenamedto",{"_index":684,"title":{"classes/UpdateNameDto.html":{}},"body":{"classes/UpdateNameDto.html":{},"coverage.html":{}}}],["updatepassword",{"_index":724,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatepassword(id",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatepassworddto",{"_index":688,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"classes/UpdatePasswordDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["updateproduct",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(productupdatedata",{"_index":557,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproduct(updatedata",{"_index":619,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductscartdto",{"_index":692,"title":{"classes/UpdateProductsCartDto.html":{}},"body":{"classes/UpdateProductsCartDto.html":{},"coverage.html":{}}}],["updateproductsdto",{"_index":558,"title":{"classes/UpdateProductsDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductsDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":725,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(updatedata",{"_index":808,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateusersdto",{"_index":697,"title":{"classes/UpdateUsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usage",{"_index":940,"title":{},"body":{"index.html":{}}}],["use",{"_index":820,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["usecreateindex",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":938,"title":{},"body":{"index.html":{}}}],["usenewurlparser",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":370,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":375,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["user.save",{"_index":438,"title":{},"body":{"injectables/LoginService.html":{}}}],["userdata",{"_index":432,"title":{},"body":{"injectables/LoginService.html":{}}}],["userdata.token",{"_index":439,"title":{},"body":{"injectables/LoginService.html":{}}}],["useremail",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{}}}],["userexist",{"_index":789,"title":{},"body":{"injectables/UsersService.html":{}}}],["userexist(id",{"_index":810,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":127,"title":{},"body":{"interfaces/Cart.html":{},"controllers/CartController.html":{},"classes/CartDto.html":{},"injectables/CartService.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":351,"title":{},"body":{"injectables/LocalStrategy.html":{},"classes/Login.html":{},"classes/LoginDto.html":{},"classes/Users.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":435,"title":{"classes/Users.html":{}},"body":{"injectables/LoginService.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":778,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":700,"title":{},"body":{"classes/UpdateUsersDto.html":{}}}],["users.service",{"_index":745,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":716,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersdata",{"_index":728,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["usersdata.password",{"_index":827,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersdto",{"_index":699,"title":{"classes/UsersDto.html":{}},"body":{"classes/UpdateUsersDto.html":{},"controllers/UsersController.html":{},"classes/UsersDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodel",{"_index":791,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":71,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersschema",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":241,"title":{"injectables/UsersService.html":{}},"body":{"injectables/CartService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdated",{"_index":858,"title":{},"body":{"injectables/UsersService.html":{}}}],["userupdated.username.tostring",{"_index":859,"title":{},"body":{"injectables/UsersService.html":{}}}],["userusername",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["useunifiedtopology",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":376,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["validate",{"_index":345,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(username",{"_index":348,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateidlength",{"_index":599,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["validateidlength(id",{"_index":621,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["validatenested",{"_index":41,"title":{},"body":{"classes/AddressDto.html":{},"classes/CartDto.html":{},"classes/UsersDto.html":{}}}],["validatenested()@type(undefined",{"_index":34,"title":{},"body":{"classes/AddressDto.html":{},"classes/UsersDto.html":{}}}],["validatenested({each",{"_index":214,"title":{},"body":{"classes/CartDto.html":{}}}],["validatepassword",{"_index":790,"title":{},"body":{"injectables/UsersService.html":{}}}],["validatepassword(id",{"_index":813,"title":{},"body":{"injectables/UsersService.html":{}}}],["validatesorttype",{"_index":235,"title":{},"body":{"injectables/CartService.html":{}}}],["validatesorttype(sorttype",{"_index":262,"title":{},"body":{"injectables/CartService.html":{}}}],["validator",{"_index":42,"title":{},"body":{"classes/AddressDto.html":{},"classes/CartDto.html":{},"classes/UsersDto.html":{},"dependencies.html":{}}}],["value",{"_index":353,"title":{},"body":{"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":645,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":992,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visit",{"_index":959,"title":{},"body":{"index.html":{}}}],["void",{"_index":264,"title":{},"body":{"injectables/CartService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["world",{"_index":100,"title":{},"body":{"injectables/AppService.html":{}}}],["yyyy",{"_index":286,"title":{},"body":{"injectables/CartService.html":{}}}],["zipcode",{"_index":13,"title":{},"body":{"classes/Address.html":{},"classes/AddressDto.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartModule.html":{},"modules/LoginModule.html":{},"modules/LogsModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/interfaces/address.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                geolocation\n                            \n                            \n                                number\n                            \n                            \n                                street\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/address.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geolocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Geolocation\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/address.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/address.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/address.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/address.interface.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Geolocation } from \"./geolocation.interface\";\n\n\nexport class Address {\n    city: String;\n    street: String;\n    number: Number;\n    zipcode: String;\n    geolocation: Geolocation;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressDto.html":{"url":"classes/AddressDto.html","title":"class - AddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/address.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                geolocation\n                            \n                            \n                                number\n                            \n                            \n                                phone\n                            \n                            \n                                street\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geolocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeolocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/address.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { ValidateNested } from \"class-validator\";\nimport { GeolocationDto } from \"./geolocation.dto\";\n\n\nexport class AddressDto {\n    city: string;\n    street: string;\n    number: number;\n    zipcode: string;\n\n    @ValidateNested()\n    @Type(() => GeolocationDto)\n    geolocation: GeolocationDto;\n\n    phone: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) { }\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nAppModule -->\n\nLogsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            LogsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CartModule } from './cart/cart.module';\nimport { LoginModule } from './login/login.module';\nimport { ProductsModule } from './products/products.module';\nimport { UsersModule } from './users/users.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { LogsModule } from './logs/logs.module';\nimport config from './config/key';\n\n@Module({\n    imports: [\n        CartModule,\n        LoginModule,\n        ProductsModule,\n        UsersModule,\n        AuthModule,\n        LogsModule,\n        MongooseModule.forRoot(\n            config.mongoURI,\n            {\n                useNewUrlParser: true,\n                useCreateIndex: true,\n                useUnifiedTopology: true\n            }\n        )\n    ],\n    controllers: [AppController],\n    providers: [AppService]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\nLocalStrategy  -->\n\nAuthModule->LocalStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthController } from \"./auth.controller\";\nimport { LocalStrategy } from \"./auth.local.strategy\";\nimport { AuthService } from \"./auth.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { UsersModule } from \"src/users/users.module\";\nimport { UsersSchema } from \"src/users/models/schemas/users.schema\";\n\n\n@Module({\n  imports: [UsersModule],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy],\n  exports: [AuthService, LocalStrategy]\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cart.html":{"url":"interfaces/Cart.html","title":"interface - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/interfaces/cart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         ProductsCart[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductsCart[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ProductsCart } from \"./products.cart.interface\";\n\nexport interface Cart {\n    userId: string;\n    date: Date;\n\n    products: ProductsCart[];\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewCart\n                            \n                            \n                                    Async\n                                deleteCart\n                            \n                            \n                                    Async\n                                filterCartsByDate\n                            \n                            \n                                    Async\n                                getCart\n                            \n                            \n                                    Async\n                                getCarts\n                            \n                            \n                                    Async\n                                getCartsLimit\n                            \n                            \n                                    Async\n                                getUserCarts\n                            \n                            \n                                    Async\n                                sortCarts\n                            \n                            \n                                    Async\n                                updateCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNewCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewCart(cart: CartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                CartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCart(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterCartsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterCartsByDate(startDateObj, endDateObj)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterCartsByDate')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDateObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDateObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCart(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCarts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCartsLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCartsLimit(limitObj)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getCartsLimit')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCarts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:userId')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortCarts(sortType: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sort/:sortType')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCart(id: string, updateData: UpdateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/cart/cart.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    Post,\n    Query,\n    Put\n} from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartDto } from './models/dto/cart.dto';\nimport { UpdateCartDto } from './models/dto/update.cart.dto';\nimport { Cart } from './models/interfaces/cart.interface';\n\n@Controller('cart')\nexport class CartController {\n    constructor(\n        private readonly cartService: CartService\n    ) {}\n\n    @Post()\n    async addNewCart(@Body() cart: CartDto): Promise {\n        return await this.cartService.addNewCart(cart);\n    }\n\n    @Get()\n    async getCarts(): Promise {\n        return await this.cartService.getCarts();\n    }\n\n    @Get('filterCartsByDate')\n    async filterCartsByDate(\n        @Query() startDateObj, @Query() endDateObj\n    ): Promise {\n        return await this.cartService.filterCartsByDate(\n            startDateObj.startdate, endDateObj.enddate\n        );\n    }\n\n    @Get('getCartsLimit')\n    async getCartsLimit(@Query() limitObj): Promise {\n        return await this.cartService.getCartsLimit(limitObj.limit);\n    }\n\n    @Get('sort/:sortType')\n    async sortCarts(\n        @Param('sortType') sortType: string\n    ): Promise {\n        return await this.cartService.sortCarts(sortType);\n    }\n\n    @Get('user/:userId')\n    async getUserCarts(\n        @Param('userId') userId: string\n    ): Promise {\n        return await this.cartService.getUserCarts(userId);\n    }\n\n    @Get(':id')\n    async getCart(@Param('id') id: string): Promise {\n        return await this.cartService.getCart(id);\n    }\n\n    @Put(':id')\n    async updateCart(\n        @Param('id') id: string, @Body() updateData: UpdateCartDto\n    ): Promise {\n        return await this.cartService.updateCart(id, updateData);\n    }\n\n    @Delete(':id')\n    async deleteCart(@Param('id') id: string) {\n        await this.cartService.deleteCart(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartDto.html":{"url":"classes/CartDto.html","title":"class - CartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/dto/cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                products\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/cart/models/dto/cart.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductsCartDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cart/models/dto/cart.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cart/models/dto/cart.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { ValidateNested } from \"class-validator\";\nimport { ProductsCartDto } from \"./products.cart.dto\";\n\nexport class CartDto {\n    userId: string;\n    date: Date;\n\n    @ValidateNested({ each: true })\n    @Type(() => ProductsCartDto)\n    products: ProductsCartDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartModule\n\n\n\ncluster_CartModule_imports\n\n\n\ncluster_CartModule_providers\n\n\n\n\nLogsModule\n\nLogsModule\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nLogsModule->CartModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nCartModule -->\n\nProductsModule->CartModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCartModule -->\n\nUsersModule->CartModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartController } from './cart.controller';\nimport { CartService } from './cart.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CartSchema } from './models/schemas/cart.schema';\nimport { ProductsCartSchema } from './models/schemas/products.cart.schema';\nimport { LogsModule } from 'src/logs/logs.module';\nimport { ProductsModule } from 'src/products/products.module';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n    imports: [\n        LogsModule,\n        ProductsModule,\n        UsersModule,\n        MongooseModule.forFeature([\n            { name: 'Cart', schema: CartSchema },\n            { name: 'ProductsCart', schema: ProductsCartSchema }\n        ])\n    ],\n    controllers: [CartController],\n    providers: [CartService]\n})\nexport class CartModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewCart\n                            \n                            \n                                    Async\n                                deleteCart\n                            \n                            \n                                    Async\n                                errorIfCartNotExist\n                            \n                            \n                                    Async\n                                filterCartsByDate\n                            \n                            \n                                    Async\n                                getCart\n                            \n                            \n                                    Async\n                                getCarts\n                            \n                            \n                                    Async\n                                getCartsLimit\n                            \n                            \n                                    Async\n                                getUserCarts\n                            \n                            \n                                    Async\n                                sortCarts\n                            \n                            \n                                    Async\n                                updateCart\n                            \n                            \n                                validateSortType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cartModel\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsService: LogsService, productsService: ProductsService, usersService: UsersService, _cartModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/cart/cart.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cartModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addNewCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewCart(cart: CartDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                CartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        errorIfCartNotExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorIfCartNotExist(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        filterCartsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterCartsByDate(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCarts()\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCartsLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCartsLimit(limit: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCarts(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortCarts\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortCarts(sortType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCart(id: string, updateData: UpdateCartDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateSortType\n                        \n                    \n                \n            \n            \n                \nvalidateSortType(sortType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cart/cart.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cartModel\n                    \n                \n\n                \n                    \n                        getcartModel()\n                    \n                \n                            \n                                \n                                    Defined in src/cart/cart.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n    HttpException,\n    HttpStatus,\n    Injectable,\n    NotFoundException\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { LogsService } from 'src/logs/logs.service';\nimport { ProductsService } from 'src/products/products.service';\nimport { UsersService } from 'src/users/users.service';\nimport { CartDto } from './models/dto/cart.dto';\nimport { UpdateCartDto } from './models/dto/update.cart.dto';\nimport { Cart } from './models/interfaces/cart.interface';\n\n@Injectable()\nexport class CartService {\n    constructor(\n        private readonly logsService: LogsService,\n        private readonly productsService: ProductsService,\n        private readonly usersService: UsersService,\n        @InjectModel('Cart') private readonly _cartModel: Model\n    ) {}\n\n    get cartModel() {\n        return this._cartModel;\n    }\n\n    async addNewCart(cart: CartDto): Promise {\n        // check if productId exists\n        for (let product of cart.products) {\n            await this.productsService.getProduct(\n                product.productId\n            );\n        }\n        await this.usersService.getUser(cart.userId);\n        // converting date from YYYY-MM-DD to Date object\n        const cartDto = {\n            ...cart,\n            date: new Date(cart.date)\n        };\n        // creating cart and saving into database\n        const newCart = new this.cartModel(cartDto);\n        const result = await newCart.save();\n        this.logsService.addLogs(\n            'cart',\n            'created',\n            result._id\n        );\n        return await result;\n    }\n\n    async getCarts(): Promise {\n        return await this.cartModel.find();\n    }\n\n    async getCart(id: string): Promise {\n        await this.errorIfCartNotExist(id);\n        return await this.cartModel.findById(id);\n    }\n\n    async filterCartsByDate(\n        startDate: string, endDate: string\n    ): Promise {\n        // finding date greather then or equal to startDate\n        // and less then or equal to endDate\n        return await this.cartModel.find({\n            date: {\n                $gte: new Date(startDate),\n                $lte: new Date(endDate)\n            }\n        });\n    }\n\n    validateSortType(sortType: string) {\n        if (sortType !== 'asc' && sortType !== 'desc') {\n            throw new HttpException(\n                `Sort type must be asc or desc`,\n                HttpStatus.BAD_REQUEST\n            );\n        }\n    }\n\n    async sortCarts(sortType: string): Promise {\n        this.validateSortType(sortType);\n        let promises = [];\n        if (sortType === 'asc') {\n            promises = await this.cartModel.find()\n                .sort({ date: 1 });\n        }\n        else {\n            // sorting descending\n            promises = await this.cartModel.find()\n                .sort({ date: -1 });\n        }\n        return await promises;\n    }\n\n    async getCartsLimit(limit: string) {\n        const allCarts = await this.cartModel.find().exec();\n        if (allCarts.length  {\n        return await this.cartModel.find({ userId: userId });\n    }\n\n    async errorIfCartNotExist(id: string) {\n        const cart = await this.cartModel.findById(id).exec();\n        if (!cart) {\n            throw new NotFoundException(\n                `Cart with id ${id} does not exist`\n            );\n        }\n    }\n\n    async updateCart(\n        id: string, updateData: UpdateCartDto\n    ): Promise {\n        await this.errorIfCartNotExist(id);\n        await this.cartModel.findByIdAndUpdate(\n            id, updateData\n        );\n        this.logsService.addLogs(\n            'cart',\n            'updated',\n            id\n        );\n        // returning updated cart\n        return await this.getCart(id);\n    }\n\n    async deleteCart(id: string) {\n        await this.errorIfCartNotExist(id);\n        await this.cartModel.findByIdAndRemove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Geolocation.html":{"url":"classes/Geolocation.html","title":"class - Geolocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Geolocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/interfaces/geolocation.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                lat\n                            \n                            \n                                    Optional\n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/geolocation.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/geolocation.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Geolocation {\n    lat?: String;\n    long?: String;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeolocationDto.html":{"url":"classes/GeolocationDto.html","title":"class - GeolocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeolocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/geolocation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/geolocation.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/geolocation.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GeolocationDto {\n    lat: string;\n    long: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.local.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.local.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LocalStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.local.strategy.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Model } from \"mongoose\";\nimport { Strategy } from \"passport-local\";\nimport { UsersService } from \"src/users/users.service\";\n\nconst bcrypt = require('bcrypt');\nconst saltRounds = 12;\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    private readonly logger = new Logger(LocalStrategy.name);\n    constructor(\n        private readonly usersService: UsersService\n    ) {\n        super();\n    }\n\n    public async validate(\n        username: string, password: string\n    ): Promise {\n        const user = await this.usersService.usersModel.findOne(\n            { username: username }\n        );\n        if (!user) {\n            throw new UnauthorizedException(\n                `User ${username} not found`\n            )\n        }\n        let passswordsEqual = await bcrypt.compare(\n            password, user.password\n        );\n        if (!passswordsEqual) {\n            throw new UnauthorizedException(\n                `Password for ${username} is not valid`\n            );\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/models/interfaces/login.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/login/models/interfaces/login.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/login/models/interfaces/login.interface.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/login/models/interfaces/login.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Login {\n    username: String;\n    password: String;\n    token: String;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginData: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { LocalStrategy } from 'src/auth/auth.local.strategy';\nimport { LoginService } from './login.service';\nimport { LoginDto } from './models/dto/login.dto';\nimport { Login } from './models/interfaces/login.interface';\n\n@Controller('login')\nexport class LoginController {\n    constructor(\n        private readonly loginService: LoginService,\n        private readonly authLocalStrategy: LocalStrategy\n    ) { }\n    @Post()\n    async login(@Body() loginData: LoginDto): Promise {\n        await this.authLocalStrategy.validate(\n            loginData.username, loginData.password\n        );\n        return await this.loginService.login(loginData);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/models/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/models/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/models/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { LoginController } from './login.controller';\nimport { LoginService } from './login.service';\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { LoginSchema } from './models/schemas/login.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: 'Login', schema: LoginSchema }\n        ]),\n        AuthModule,\n        JwtModule.register({\n            secret: 'Secret underwater party advencha',\n            signOptions: {\n                expiresIn: '60s'\n            }\n        })\n    ],\n    controllers: [LoginController],\n    providers: [LoginService],\n})\nexport class LoginModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, loginModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginData: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { LoginDto } from './models/dto/login.dto';\nimport { Login } from './models/interfaces/login.interface';\nimport { JwtService } from '@nestjs/jwt';\nimport { Model } from 'mongoose';\n\nconst bcrypt = require('bcrypt');\nconst salt = 12;\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        private readonly jwtService: JwtService,\n        @InjectModel('Login') private readonly loginModel: Model\n    ) { }\n\n    async login(loginData: LoginDto): Promise {\n        let passwordHashed = await bcrypt.hash(\n            loginData.password,\n            salt\n        );\n        loginData = {\n            ...loginData,\n            password: passwordHashed\n        }\n        let userData = {\n            ...loginData,\n            token: this.jwtService.sign(loginData)\n        }\n        // store login users data in database\n        const user = new this.loginModel(userData);\n        await user.save();\n        return await {\n            token: userData.token\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logs.html":{"url":"interfaces/Logs.html","title":"interface - Logs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logs/models/interfaces/logs.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        at:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Logs {\n    _id: String;\n    id: String;\n    name: String;\n    action: String;\n    at: String;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogsController.html":{"url":"controllers/LogsController.html","title":"controller - LogsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logs/logs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLogs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogs()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/logs/logs.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { LogsService } from \"./logs.service\";\n\n@Controller('logs')\nexport class LogsController {\n    constructor(\n        private readonly logsService: LogsService\n    ) {}\n\n    @Get()\n    async getLogs() {\n        return await this.logsService.getLogs();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogsDto.html":{"url":"classes/LogsDto.html","title":"class - LogsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logs/models/dto/logs.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                at\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/logs/models/dto/logs.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/logs/models/dto/logs.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/logs/models/dto/logs.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/logs/models/dto/logs.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LogsDto {\n    id: string;\n    name: string;\n    action: string;\n    at: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_providers\n\n\n\n\nLogsService \n\nLogsService \n\n\n\nLogsModule\n\nLogsModule\n\nLogsService  -->\n\nLogsModule->LogsService \n\n\n\n\n\nLogsService\n\nLogsService\n\nLogsModule -->\n\nLogsService->LogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LogsController } from './logs.controller';\nimport { LogsService } from './logs.service';\nimport { LogsSchema } from './models/schemas/logs.schema';\n\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: 'Logs', schema: LogsSchema }\n        ])\n    ],\n    controllers: [LogsController],\n    providers: [LogsService],\n    exports: [LogsService]\n})\nexport class LogsModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsService.html":{"url":"injectables/LogsService.html","title":"injectable - LogsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logs/logs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                generateDate\n                            \n                            \n                                    Async\n                                getLogs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    logsModel\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_logsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/logs/logs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _logsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(name: string, action: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logs/logs.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDate\n                        \n                    \n                \n            \n            \n                \ngenerateDate()\n                \n            \n\n\n            \n                \n                    Defined in src/logs/logs.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/logs/logs.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        logsModel\n                    \n                \n\n                \n                    \n                        getlogsModel()\n                    \n                \n                            \n                                \n                                    Defined in src/logs/logs.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { LogsDto } from \"./models/dto/logs.dto\";\nimport { Logs } from \"./models/interfaces/logs.interface\";\n\n@Injectable()\nexport class LogsService {\n    constructor(\n        @InjectModel('Logs') private readonly _logsModel: Model\n    ) { }\n\n    get logsModel() {\n        return this._logsModel;\n    }\n\n    async addLogs(name: string, action: string, id: string) {\n        const newLog: LogsDto = {\n            id: id,\n            name: name,\n            action: action,\n            at: this.generateDate()\n        }\n        const log = new this.logsModel(newLog);\n        await log.save();\n    }\n\n    generateDate(): string {\n        return new Date().toLocaleString(\n            'hu-HU', { timeZone: 'CET' }\n        );\n    }\n\n    async getLogs() {\n        return await this.logsModel.find();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Name.html":{"url":"classes/Name.html","title":"class - Name","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/interfaces/name.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/name.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/name.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Name {\n    firstname: String;\n    lastname: String;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NameDto.html":{"url":"classes/NameDto.html","title":"class - NameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/name.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/name.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/name.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NameDto {\n    firstname: string;\n    lastname: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Products.html":{"url":"classes/Products.html","title":"class - Products","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Products\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/interfaces/products.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                dateAdded\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/interfaces/products.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Products {\n    title: string;\n    price: number;\n    description: string;\n    category: string;\n    image: string;\n    dateAdded: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductsCart.html":{"url":"interfaces/ProductsCart.html","title":"interface - ProductsCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductsCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/interfaces/products.cart.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProductsCart {\n    productId: string;\n    quantity: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsCartDto.html":{"url":"classes/ProductsCartDto.html","title":"class - ProductsCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/dto/products.cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/cart/models/dto/products.cart.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/cart/models/dto/products.cart.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductsCartDto {\n    productId: string;\n    quantity: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProductsList\n                            \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllCategories\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                getProductsLimit\n                            \n                            \n                                    Async\n                                getSpecificCategory\n                            \n                            \n                                    Async\n                                sortProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductsList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductsList(productsList: ProductsDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('list')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                            ProductsDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(productData: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('categories')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductsLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsLimit(limitObject)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitObject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSpecificCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpecificCategory(category: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('categories/:category')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortProducts(typeOfSort)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sort/:typeOfSort')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeOfSort\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(productUpdateData: UpdateProductsDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':_id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productUpdateData\n                                    \n                                                UpdateProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Param,\n    Post,\n    Put,\n    Query\n} from '@nestjs/common';\nimport { ProductsDto } from './models/dto/products.dto';\nimport { UpdateProductsDto } from './models/dto/update.products.dto';\nimport { Products } from './models/interfaces/products.interface';\nimport { ProductsService } from './products.service';\n\n@Controller('products')\nexport class ProductsController {\n    constructor(\n        private readonly productsService: ProductsService\n    ) {}\n\n    @Post()\n    async createProduct(\n        @Body() productData: ProductsDto\n    ): Promise {\n        return await this.productsService\n            .createProduct(productData);\n    }\n\n    @Post('list')\n    async addProductsList(@Body() productsList: ProductsDto[]) {\n        await this.productsService.addProductsList(productsList);\n    }\n\n    @Get()\n    async getProductsLimit(\n        @Query() limitObject\n    ): Promise {\n        return await this.productsService.getProductsLimit(\n            limitObject.limit\n        );\n    }\n\n    @Get('sort/:typeOfSort')\n    async sortProducts(\n        @Param('typeOfSort') typeOfSort\n    ): Promise {\n        return await this.productsService\n            .sortProducts(typeOfSort);\n    }\n\n    @Get()\n    async getAllProducts(): Promise {\n        return await this.productsService\n            .getAllProducts();\n    }\n\n    @Get('categories')\n    async getAllCategories(): Promise {\n        return await this.productsService.getAllCategories();\n    }\n\n    @Get('categories/:category')\n    async getSpecificCategory(\n        @Param('category') category: string\n    ): Promise {\n        return await this.productsService\n            .getSpecificCategory(category);\n    }\n\n    @Get(':_id')\n    async getProduct(@Param('_id') id: string): Promise {\n        return await this.productsService.getProduct(id);\n    }\n\n    @Put(':_id')\n    async updateProduct(\n        @Body() productUpdateData: UpdateProductsDto,\n        @Param('_id') id: string\n    ): Promise {\n        return await this.productsService.updateProduct(\n            productUpdateData, id\n        );\n    }\n\n    @Delete(':_id')\n    async deleteProduct(@Param('_id') id: string) {\n        await this.productsService.deleteProduct(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsDto.html":{"url":"classes/ProductsDto.html","title":"class - ProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/dto/products.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                dateAdded\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/models/dto/products.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductsDto {\n    title: string;\n    price: number;\n    description: string;\n    category: string;\n    image: string;\n    dateAdded: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_exports\n\n\n\n\nLogsModule\n\nLogsModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nLogsModule->ProductsModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LogsModule } from 'src/logs/logs.module';\nimport { ProductsSchema } from './models/schemas/products.schema';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: 'Products', schema: ProductsSchema }\n        ]),\n        LogsModule\n    ],\n    controllers: [ProductsController],\n    providers: [ProductsService],\n    exports: [ProductsService]\n})\nexport class ProductsModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProductsList\n                            \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                errorIfProductExist\n                            \n                            \n                                    Async\n                                findAndSort\n                            \n                            \n                                    Async\n                                getAllCategories\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                getProductsLimit\n                            \n                            \n                                    Async\n                                getSpecificCategory\n                            \n                            \n                                    Async\n                                sortProducts\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                            \n                                validateIdLength\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    productsModel\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsService: LogsService, _productsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _productsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductsList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductsList(productsList: ProductsDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                            ProductsDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(productData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        errorIfProductExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorIfProductExist(productData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndSort\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndSort(sort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductsLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsLimit(limitString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSpecificCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpecificCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortProducts(sort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(updateData: UpdateProductsDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateData\n                                    \n                                                UpdateProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateIdLength\n                        \n                    \n                \n            \n            \n                \nvalidateIdLength(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        productsModel\n                    \n                \n\n                \n                    \n                        getproductsModel()\n                    \n                \n                            \n                                \n                                    Defined in src/products/products.service.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n    HttpException,\n    HttpStatus,\n    Injectable,\n    NotFoundException\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Products } from './models/interfaces/products.interface';\nimport { ProductsDto } from './models/dto/products.dto';\nimport { UpdateProductsDto } from './models/dto/update.products.dto';\nimport { LogsService } from 'src/logs/logs.service';\n\nconst idLength = 24;\n\n@Injectable()\nexport class ProductsService {\n    constructor(\n        private readonly logsService: LogsService,\n        @InjectModel('Products') private readonly _productsModel: Model\n    ) { }\n\n    get productsModel() {\n        return this._productsModel;\n    }\n\n    async createProduct(\n        productData: ProductsDto\n    ): Promise {\n        await this.errorIfProductExist(productData);\n        productData = {\n            ...productData,\n            dateAdded: this.logsService.generateDate()\n        }\n        const newProduct = new this.productsModel(productData);\n        const result = await newProduct.save();\n        this.logsService.addLogs(\n            result.title,\n            'created',\n            result._id\n        );\n        return await result;\n    }\n\n    async errorIfProductExist(productData: ProductsDto) {\n        const product = await this.productsModel.findOne(\n            { title: productData.title }\n        ).exec();\n        if (product) {\n            throw new HttpException(\n                `Product with title: ${productData.title} already exist`,\n                HttpStatus.BAD_REQUEST\n            );\n        }\n    }\n\n    async getProduct(id: string): Promise {\n        this.validateIdLength(id);\n        const product = await this.productsModel\n            .findById(id)\n            .exec();\n        if (!product) {\n            throw new NotFoundException(\n                `Product with id: ${id} does not exist.`\n            );\n        }\n        return product;\n    }\n\n    async getAllProducts(): Promise {\n        return await this.productsModel.find();\n    }\n\n    async addProductsList(productsList: ProductsDto[]) {\n        productsList.forEach(async (product) => {\n            await this.createProduct(product);\n        });\n    }\n\n    async getProductsLimit(\n        limitString: string\n    ): Promise {\n        var limitNumber = Number(limitString);\n        const allUsersLength = await (await this.productsModel\n            .find())\n            .length;\n        if (allUsersLength  {\n        if (sort !== 'desc' && sort !== 'asc') {\n            throw new HttpException(\n                `Sort method must be asc or desc`,\n                HttpStatus.BAD_REQUEST\n            );\n        }\n        return await this.findAndSort(sort);\n    }\n\n    async findAndSort(sort: string) {\n        var promises = [];\n        if (sort === 'asc') {\n            promises = await this.productsModel.find()\n                .sort({ dateAdded: 1 });\n        }\n        if (sort === 'desc') {\n            promises = await this.productsModel.find()\n                .sort({ dateAdded: -1 });\n        }\n        return await promises;\n    }\n\n    async updateProduct(\n        updateData: UpdateProductsDto, id: string\n    ): Promise {\n        this.validateIdLength(id);\n        await this.getProduct(id);\n        await this.productsModel.findByIdAndUpdate(\n            id, updateData\n        );\n        const result = await this.getProduct(id);\n        this.logsService.addLogs(\n            result.title,\n            'updated',\n            id\n        );\n        return await result;\n    }\n\n    async deleteProduct(id: string) {\n        this.validateIdLength(id);\n        const result = await this.productsModel\n            .findByIdAndRemove(id);\n        this.logsService.addLogs(result.title, 'removed', id);\n    }\n\n    async getAllCategories(): Promise {\n        const products = await this.productsModel.find().exec();\n        let categories = [];\n        products.forEach((product) => {\n            categories.push(product.category);\n        });\n        // eliminate duplicates\n        return [... new Set(categories)];\n    }\n\n    async getSpecificCategory(\n        category: string\n    ): Promise {\n        const categories = await this.getAllCategories();\n        // make sure that category exist\n        for (let currCategory of categories) {\n            if (currCategory == category) {\n                return await this.productsModel.find(\n                    { category: category }\n                );\n            }\n        }\n        // if category does not exist\n        throw new NotFoundException(\n            `Category: ${category} not found`\n        );\n    }\n\n    validateIdLength(id: string) {\n        if (id.length !== idLength) {\n            throw new HttpException(\n                `id: ${id} is not valid`,\n                HttpStatus.UNAUTHORIZED\n            );\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAddressDto.html":{"url":"classes/UpdateAddressDto.html","title":"class - UpdateAddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/update.address.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AddressDto } from \"./address.dto\";\nimport { PartialType } from \"@nestjs/mapped-types\";\n\n\nexport class UpdateAddressDto extends PartialType(AddressDto) { }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartDto.html":{"url":"classes/UpdateCartDto.html","title":"class - UpdateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/dto/update.cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CartDto } from \"./cart.dto\";\n\nexport class UpdateCartDto extends PartialType(CartDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGeolocationDto.html":{"url":"classes/UpdateGeolocationDto.html","title":"class - UpdateGeolocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGeolocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/update.geolocation.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GeolocationDto } from \"./geolocation.dto\";\nimport { PartialType } from \"@nestjs/mapped-types\";\n\nexport class UpdateGeolocationDto extends PartialType(GeolocationDto) { }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNameDto.html":{"url":"classes/UpdateNameDto.html","title":"class - UpdateNameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/update.name.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NameDto } from \"./name.dto\";\nimport { PartialType } from \"@nestjs/mapped-types\";\n\nexport class UpdateNameDto extends PartialType(NameDto) { }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/update.password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/update.password.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdatePasswordDto {\n    newPassword: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductsCartDto.html":{"url":"classes/UpdateProductsCartDto.html","title":"class - UpdateProductsCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductsCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/models/dto/update.products.cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { ProductsCartDto } from \"./products.cart.dto\";\n\nexport class UpdateProductsCartDto extends PartialType(\n    ProductsCartDto\n) { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductsDto.html":{"url":"classes/UpdateProductsDto.html","title":"class - UpdateProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/models/dto/update.products.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { ProductsDto } from \"./products.dto\";\n\nexport class UpdateProductsDto extends PartialType(ProductsDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUsersDto.html":{"url":"classes/UpdateUsersDto.html","title":"class - UpdateUsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/update.users.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UsersDto } from \"./users.dto\";\nimport { PartialType } from \"@nestjs/mapped-types\";\nimport { OmitType } from \"@nestjs/mapped-types\";\n\n\nexport class UpdateUsersDto extends PartialType(\n    OmitType(UsersDto, ['password'] as const)\n) {}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/interfaces/users.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                dateOfRegistration\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfRegistration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Name\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/interfaces/users.interface.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Address } from \"./address.interface\";\nimport { Name } from \"./name.interface\";\n\n\nexport class Users {\n    _id: String;\n    email: String;\n    username: String;\n    password: String;\n    name: Name;\n    address: Address;\n    phone: String;\n    dateOfRegistration: String;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsersLimit\n                            \n                            \n                                    Async\n                                sortResults\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(usersData: UsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usersData\n                                    \n                                                UsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersLimit(limitObject)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('limit-users')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitObject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortResults(typeOfSort: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sort/:typeOfSort')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeOfSort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, passwordUpdate: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update_password/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordUpdate\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, updateData: UpdateUsersDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Post,\n    Body,\n    Get,\n    Param,\n    Query,\n    Delete,\n    Put\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { Users } from './models/interfaces/users.interface';\nimport { UsersDto } from './models/dto/users.dto';\nimport { UpdateUsersDto } from './models/dto/update.users.dto';\nimport { UpdatePasswordDto } from './models/dto/update.password.dto';\n\n\n@Controller('users')\nexport class UsersController {\n    constructor(\n        private readonly usersService: UsersService\n    ) { }\n\n    @Post()\n    async createUser(@Body() usersData: UsersDto): Promise {\n        return await this.usersService.createUser(usersData);\n    }\n\n    @Get('limit-users')\n    async getUsersLimit(@Query() limitObject): Promise {\n        return await this.usersService.getUsersLimit(\n            limitObject.limit\n        );\n    }\n\n    @Get('sort/:typeOfSort')\n    async sortResults(\n        @Param('typeOfSort') typeOfSort: string\n    ): Promise {\n        return await this.usersService.sortResults(typeOfSort);\n    }\n\n    @Get()\n    async getAllUsers(): Promise {\n        return await this.usersService.getAllUsers();\n    }\n\n    @Get(':_id')\n    async getUser(@Param('_id') id: string): Promise {\n        return await this.usersService.getUser(id);\n    }\n\n    @Put(':_id')\n    async updateUser(\n        @Param('_id') id: string,\n        @Body() updateData: UpdateUsersDto\n    ): Promise {\n        return await this.usersService.updateUser(updateData, id);\n    }\n\n    @Put('update_password/:_id')\n    async updatePassword(\n        @Param('_id') id: string,\n        @Body() passwordUpdate: UpdatePasswordDto\n    ) {\n        await this.usersService.updatePassword(\n            id, passwordUpdate.newPassword\n        );\n    }\n\n    @Delete(':_id')\n    async deleteUser(@Param('_id') id: string) {\n        await this.usersService.deleteUser(id);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersDto.html":{"url":"classes/UsersDto.html","title":"class - UsersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                dateOfRegistration\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfRegistration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NameDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/models/dto/users.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AddressDto } from \"./address.dto\";\nimport { NameDto } from \"./name.dto\";\nimport { Type } from \"class-transformer\";\nimport { ValidateNested, IsEmail } from \"class-validator\";\n\n\nexport class UsersDto {\n\n    @IsEmail()\n    email: string;\n\n    username: string;\n    password: string;\n\n    @ValidateNested()\n    @Type(() => NameDto)\n    name: NameDto;\n\n    @ValidateNested()\n    @Type(() => AddressDto)\n    address: AddressDto;\n\n    phone: string;\n\n    dateOfRegistration: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nLogsModule\n\nLogsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLogsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersSchema } from './models/schemas/users.schema';\nimport { AddressSchema } from './models/schemas/address.schema';\nimport { NameSchema } from './models/schemas/name.schema';\nimport { GeolocationSchema } from './models/schemas/geolocation.schema';\nimport { LogsModule } from 'src/logs/logs.module';\n\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: 'Users', schema: UsersSchema },\n            { name: 'Address', schema: AddressSchema },\n            { name: 'Name', schema: NameSchema },\n            { name: 'Geolocation', schema: GeolocationSchema }\n        ]),\n        LogsModule\n    ],\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService]\n})\nexport class UsersModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                errorIfEmailExists\n                            \n                            \n                                    Async\n                                errorIfUsernameExists\n                            \n                            \n                                    Async\n                                findAndSort\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsersLimit\n                            \n                            \n                                    Async\n                                sortResults\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                userExist\n                            \n                            \n                                validateIdLength\n                            \n                            \n                                    Async\n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usersModel\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsService: LogsService, _usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(usersData: UsersDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usersData\n                                    \n                                                UsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        errorIfEmailExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorIfEmailExists(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        errorIfUsernameExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorIfUsernameExists(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAndSort\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAndSort(sort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersLimit(limitString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limitString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sortResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    sortResults(sort: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, passwordUpdate)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(updateData: UpdateUsersDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateData\n                                    \n                                                UpdateUsersDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    userExist(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateIdLength\n                        \n                    \n                \n            \n            \n                \nvalidateIdLength(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePassword(id: string, newPasswordHashed: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPasswordHashed\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usersModel\n                    \n                \n\n                \n                    \n                        getusersModel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/users.service.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n    HttpException,\n    HttpStatus,\n    Injectable,\n    NotFoundException\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Users } from './models/interfaces/users.interface';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { UsersDto } from './models/dto/users.dto';\nimport { UpdateUsersDto } from './models/dto/update.users.dto';\nimport { LogsService } from 'src/logs/logs.service';\n\n\nconst bcrypt = require('bcrypt');\nconst salt = 12;\nconst idLength = 24;    // length of mongoose PrimaryKey\n\n@Injectable()\nexport class UsersService {\n    constructor(\n        private readonly logsService: LogsService,\n        @InjectModel('Users') private readonly _usersModel: Model\n    ) { }\n\n    get usersModel() {\n        // use this getter to access users \n        // database outside the users service\n        return this._usersModel;\n    }\n\n    async createUser(usersData: UsersDto): Promise {\n        let hashPassword = await bcrypt.hash(\n            usersData.password, salt\n        );\n        // generateDate should return current \n        // date and time for 'hu-HU' timezone\n        usersData = {\n            ...usersData,\n            dateOfRegistration: this.logsService.generateDate(),\n            password: hashPassword\n        };\n        await this.errorIfUsernameExists(usersData.username);\n        await this.errorIfEmailExists(usersData.email);\n\n        const newUser = new this.usersModel(usersData)\n        const result = await newUser.save();\n\n        this.logsService.addLogs(\n            result.username.toString(),\n            'registered',\n            result._id\n        );\n        return await result;\n    }\n\n    async getAllUsers() {\n        return await this.usersModel.find();\n    }\n\n    async getUser(id: string): Promise {\n        this.validateIdLength(id);\n        const user = await this.usersModel.findById(id);\n        if (!user) {\n            throw new NotFoundException(\n                `User with id: ${id} not found`\n            );\n        }\n        return await user;\n    }\n\n    async errorIfUsernameExists(username: string) {\n        const userUsername = await this.usersModel.findOne(\n            { username: username }\n        ).exec();\n        if (userUsername) {\n            throw new HttpException(\n                `User with username ${username} already exists.`,\n                HttpStatus.UNAUTHORIZED\n            );\n        }\n    }\n\n    async errorIfEmailExists(email: string) {\n        const userEmail = await this.usersModel.findOne(\n            { email: email }\n        ).exec();\n        if (userEmail) {\n            throw new HttpException(\n                `User with email ${email} already exists.`,\n                HttpStatus.UNAUTHORIZED\n            );\n        }\n    }\n\n    validateIdLength(id: string) {\n        if (id.length !== idLength) {\n            throw new HttpException(\n                `id: ${id} is not valid`, HttpStatus.UNAUTHORIZED\n            );\n        }\n    }\n\n    async getUsersLimit(limitString: string): Promise {\n        var limitNumber = Number(limitString);\n        const allUsers = await this.usersModel.find();\n        if (allUsers.length  {\n        if (sort !== 'desc' && sort !== 'asc') {\n            throw new HttpException(\n                `Sort method must be asc or desc`,\n                HttpStatus.BAD_REQUEST\n            )\n        }\n        return await this.findAndSort(sort);\n    }\n\n    async findAndSort(sort: string) {\n        var promises = [];\n        if (sort === 'asc') {\n            promises = await this.usersModel.find()\n                .sort({ dateOfRegistration: 1 })\n        }\n        if (sort === 'desc') {\n            promises = await this.usersModel.find()\n                .sort({ dateOfRegistration: -1 })\n        }\n        return await promises;\n    }\n\n    async updateUser(\n        updateData: UpdateUsersDto, id: string\n    ): Promise {\n        await this.userExist(id);\n        await this.errorIfUsernameExists(updateData.username);\n        await this.errorIfEmailExists(updateData.email);\n        await this.usersModel.findByIdAndUpdate(\n            id, updateData\n        );\n        const updatedUser = await this.getUser(id);\n        this.logsService.addLogs(\n            updatedUser.username.toString(),\n            'updated',\n            id\n        );\n        return await updatedUser;\n    }\n\n    async deleteUser(id: string) {\n        const removedUser = await this.usersModel\n            .findByIdAndRemove(id);\n        this.logsService.addLogs(\n            removedUser.username.toString(),\n            'removed',\n            removedUser._id\n        );\n        return await removedUser;\n    }\n\n    async updatePassword(id: string, passwordUpdate) {\n        await this.userExist(id);\n        const passwordUpdateHashed = await bcrypt.hash(\n            passwordUpdate, salt\n        );\n        await this.validatePassword(id, passwordUpdateHashed);\n        await this.usersModel.findByIdAndUpdate(\n            id,\n            { $set: { password: passwordUpdateHashed } }\n        );\n        const userUpdated = await this.getUser(id);\n        this.logsService.addLogs(\n            userUpdated.username.toString(),\n            'password updated',\n            id\n        );\n    }\n\n    async validatePassword(id: string, newPasswordHashed: string) {\n        const user = await this.usersModel.findById(id).exec();\n        if (newPasswordHashed == user.password) {\n            throw new HttpException(\n                `Old password cannot be new password`,\n                HttpStatus.BAD_REQUEST\n            );\n        }\n    }\n\n    async userExist(id: string) {\n        const user = await this.usersModel.findById(id).exec();\n        if (!user) {\n            throw new NotFoundException(\n                `User with id: ${id} does not exist`\n            )\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.local.strategy.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.local.strategy.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/cart/models/dto/cart.dto.ts\n            \n            class\n            CartDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/models/dto/products.cart.dto.ts\n            \n            class\n            ProductsCartDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/models/dto/update.cart.dto.ts\n            \n            class\n            UpdateCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/models/dto/update.products.cart.dto.ts\n            \n            class\n            UpdateProductsCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/models/interfaces/cart.interface.ts\n            \n            interface\n            Cart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cart/models/interfaces/products.cart.interface.ts\n            \n            interface\n            ProductsCart\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cart/models/schemas/cart.schema.ts\n            \n            variable\n            CartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/models/schemas/products.cart.schema.ts\n            \n            variable\n            ProductsCartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            variable\n            salt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/login/models/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/models/interfaces/login.interface.ts\n            \n            class\n            Login\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/login/models/schemas/login.schema.ts\n            \n            variable\n            LoginSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logs/logs.controller.ts\n            \n            controller\n            LogsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logs/logs.service.ts\n            \n            injectable\n            LogsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/logs/models/dto/logs.dto.ts\n            \n            class\n            LogsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/logs/models/interfaces/logs.interface.ts\n            \n            interface\n            Logs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/logs/models/schemas/logs.schema.ts\n            \n            variable\n            LogsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/models/dto/products.dto.ts\n            \n            class\n            ProductsDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/models/dto/update.products.dto.ts\n            \n            class\n            UpdateProductsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/models/interfaces/products.interface.ts\n            \n            class\n            Products\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/models/schemas/products.schema.ts\n            \n            variable\n            ProductsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            variable\n            idLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/address.dto.ts\n            \n            class\n            AddressDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/models/dto/geolocation.dto.ts\n            \n            class\n            GeolocationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/dto/name.dto.ts\n            \n            class\n            NameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/dto/update.address.dto.ts\n            \n            class\n            UpdateAddressDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/update.geolocation.dto.ts\n            \n            class\n            UpdateGeolocationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/update.name.dto.ts\n            \n            class\n            UpdateNameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/update.password.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/update.users.dto.ts\n            \n            class\n            UpdateUsersDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/users.dto.ts\n            \n            class\n            UsersDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/interfaces/address.interface.ts\n            \n            class\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/interfaces/geolocation.interface.ts\n            \n            class\n            Geolocation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/interfaces/name.interface.ts\n            \n            class\n            Name\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/models/interfaces/users.interface.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/models/schemas/address.schema.ts\n            \n            variable\n            AddressSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/schemas/geolocation.schema.ts\n            \n            variable\n            GeolocationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/schemas/name.schema.ts\n            \n            variable\n            NameSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/schemas/users.schema.ts\n            \n            variable\n            UsersSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            idLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            salt\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.15\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.0\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^10.0.0\n        \n            mongoose : ^5.13.8\n        \n            passport : ^0.4.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.37\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOnline Shopping Store API\nTable of Contents\n\nAbout\nGetting Started\nPrerequisites\nInstalling\n\n\nTools used in development\nUsage\nAuthor\n\nAbout\nThis is an online shopping API.\nGetting Started\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\nPrerequisites\nTo successfully run and test this on your local machine, you need to install:\n\nNode.js\nPostman\n\nTo use MongoDB Atlas visit MongoDB Atlas and create your acount and your own cluster.\nYou should add link of your cluster in ./src/config/key.ts.\nInstalling\nTo get project on your local machine run command:\ngit clone https://github.com/jjovana314/store-apiAnd run:\nnpm installnpm run start:devAPI listens on port 3000\nTools used in development\n\nNestJS\nMongoDB\nMongoDB Atlas\n\nUsage\nThis API can be used as a back-end for an online shopping application\nAuthor\nJovana Jovanović\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\nLocalStrategy  -->\n\nAuthModule->LocalStrategy \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nCartModule -->\n\nLogsModule->CartModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nLogsModule->ProductsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLogsModule->UsersModule\n\n\n\nAppModule -->\n\nLogsModule->AppModule\n\n\n\n\n\nLogsService \n\nLogsService \n\nLogsService  -->\n\nLogsModule->LogsService \n\n\n\nCartModule -->\n\nProductsModule->CartModule\n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nCartModule -->\n\nUsersModule->CartModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nLogsService\n\nLogsService\n\nLogsModule -->\n\nLogsService->LogsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddressSchema   (src/.../address.schema.ts)\n                        \n                        \n                            bcrypt   (src/.../auth.local.strategy.ts)\n                        \n                        \n                            bcrypt   (src/.../login.service.ts)\n                        \n                        \n                            bcrypt   (src/.../users.service.ts)\n                        \n                        \n                            CartSchema   (src/.../cart.schema.ts)\n                        \n                        \n                            GeolocationSchema   (src/.../geolocation.schema.ts)\n                        \n                        \n                            idLength   (src/.../products.service.ts)\n                        \n                        \n                            idLength   (src/.../users.service.ts)\n                        \n                        \n                            LoginSchema   (src/.../login.schema.ts)\n                        \n                        \n                            LogsSchema   (src/.../logs.schema.ts)\n                        \n                        \n                            NameSchema   (src/.../name.schema.ts)\n                        \n                        \n                            ProductsCartSchema   (src/.../products.cart.schema.ts)\n                        \n                        \n                            ProductsSchema   (src/.../products.schema.ts)\n                        \n                        \n                            salt   (src/.../login.service.ts)\n                        \n                        \n                            salt   (src/.../users.service.ts)\n                        \n                        \n                            saltRounds   (src/.../auth.local.strategy.ts)\n                        \n                        \n                            UsersSchema   (src/.../users.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/models/schemas/address.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AddressSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    city: String,\n    street: String,\n    number: Number,\n    zipcode: String,\n    geolocation: GeolocationSchema\n})\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.local.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n\n\n        \n    \n\n    src/login/login.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n\n\n        \n    \n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 24\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n\n\n        \n    \n\n    src/cart/models/schemas/cart.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    userId: String,\n    date: Date,\n    products: [ProductsCartSchema]\n})\n                    \n                \n\n\n        \n    \n\n    src/users/models/schemas/geolocation.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GeolocationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    lat: String,\n    long: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/products.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        idLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 24\n                    \n                \n\n\n        \n    \n\n    src/login/models/schemas/login.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoginSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    username: String,\n    password: String,\n    token: String\n})\n                    \n                \n\n\n        \n    \n\n    src/logs/models/schemas/logs.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    name: String,\n    action: String,\n    at: String\n})\n                    \n                \n\n\n        \n    \n\n    src/users/models/schemas/name.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NameSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    firstname: String,\n    lastname: String\n})\n                    \n                \n\n\n        \n    \n\n    src/cart/models/schemas/products.cart.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductsCartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    productId: String,\n    quantity: Number\n})\n                    \n                \n\n\n        \n    \n\n    src/products/models/schemas/products.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    title: String,\n    price: Number,\n    description: String,\n    category: String,\n    image: String,\n    dateAdded: String\n})\n                    \n                \n\n\n        \n    \n\n    src/users/models/schemas/users.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    email: String,\n    username: String,\n    password: String,\n    name: NameSchema,\n    address: AddressSchema,\n    phone: String,\n    dateOfRegistration: String\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
